


Network Working Group                                        N. Williams
Internet-Draft                                              Cryptonector
Updates: 1964, 2743, 2744                               January 27, 2014
(if approved)
Intended status: Standards Track
Expires: July 31, 2014


    Impersonation Naming Attribute for the Generic Security Services
              Application Programming Interface (GSS-API)
        draft-williams-kitten-impersonation-naming-attribute-00

Abstract

   This document describes a method for impersonation of one principal
   by another.  Relying parties are expected to apply policy to decide
   which impersonation attempts they accept.  Trusted third parties may
   provide assistance in evaluating policy.  The proposed system fails
   safe: applications that do not support it see their peers as the
   impersonators, not the impersonated principals.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 31, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.    Introduction and Motivation
   1.1.  Conventions used in this document
   2.    Generic Impersonation Attributes
   2.1.  Intended Usage
   2.2.  Local Policy
   2.3.  Third-Party Policy Assistance
   3.    Kerberos Bindings of Impersonation Attributes
   4.    Sample Code
   5.    Security Considerations
   6.    IANA Considerations
   7.    Informative References
   8.    Normative References
         Author's Address


1.  Introduction and Motivation

   A very common application design involves services that must
   impersonate their clients to other services.  There are two common
   designs for enabling this:

   credential delegation  where clients delegate credentials to the
      impersonators,

   explicit impersonation  where impersonators explicitly state that
      they are impersonating others.

   There exist protocols where the explicit impersonation concept is
   difficult to retrofit.  And there exist protocols where credential
   delegation is the commonly-deployed -and therefore expected- method
   for impersonation.  Therefore explicit impersonation is not
   universally available.

   On the other hand, unconstrained credential delegation is dangerous
   (for obvious reasons).  What to do?

   One answer has been constrained delegation.  In this design the
   credential issuer creates a credential for impersonating the client,
   but in a constrained way (e.g., to only a small set of downstream
   services).  But constrained credential delegation is difficult to
   manage: the constraints must be expressed by parties that aren't
   best-placed to know the desired policy.

   We propose a simple solution for GSS-API applications: have the
   impersonator use their own credential (or one specifically for this
   purpose) and assert the name of the principal to be impersonated as a
   name attribute.  This is very similar to the concept of "authz-id" in
   Simple Authentication and Security Layers (SASL) [RFC4422], but with
   some subtle differences as described below.

1.1.  Conventions used in this document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].


2.  Generic Impersonation Attributes

   We define two generic GSS-API naming attributes for impersonation:

   o  GSS_C_ATTR_IMPERSONATED_PRINCIPAL

   o  GSS_C_ATTR_AUTHZ_ID

   The first attribute notionally carries an exported name token (though
   not necessarily in that form in the mechanism's implementation)
   stating the name of the principal to be impersonated (by the
   principal whose CREDENTIAL HANDLE's desired NAME has this attribute).
   This is subtly different from SASL's authz-id concept in that the
   latter carries an application-specific name form while this one
   carries a mechanism-specific name form (though not necessarily the
   same mechanism as is used to authenticate the impersonator!).

   The second attribute carries an application-specific name form
   corresponding to an identity that is to be impersonated (by the
   principal whose CREDENTIAL HANDLE's desired NAME has this attribute).
   This attribute's semantics are exactly like SASL's.

2.1.  Intended Usage

   Impersonator applications are expected to create a NAME object for
   their impersonator principal name, set one, the other, or even both
   of the impersonation attributes, acquire a credential for this NAME
   as the desired_name, then use this credential handle with
   GSS_Init_sec_context() to authenticate to other services.

2.2.  Local Policy

   Applications that are not aware of impersonation should observer
   their peers' names as the impersonator name: impersonation fails
   safe.

   Applications that are impersonation-aware will obtain the name of the
   principal to be impersonated and will apply local policy to determine
   if the impersonator principal is permitted to impersonate the
   requested principal [to the application].

2.3.  Third-Party Policy Assistance

   Trusted third parties (e.g., Kerberos KDCs) may reject impersonation
   using policy local to them.  Trusted third parties may also bless
   impersonation attempts, but application local policy must still be
   applied (even if that policy is to accept a trusted third party's
   blessing).

   Trusted third party policy is conveyed to application via their use
   (or non-use) of the GSS_C_ATTR_GENERIC_UNCONSTRAINED or
   GSS_C_ATTR_GENERIC_UNCONSTRAINED_OK name attribute prefixes
   [I-D.williams-kitten-generic-naming-attributes].

   [[anchor1: Must expand on usage/non-usage of the generic
   unconstrained attributes, both on the impersonator side and on the
   acceptor side.]]


3.  Kerberos Bindings of Impersonation Attributes

   For Kerberos [RFC4120] we use authorization-data, which may be
   carried in either Tickets or Authenticators, and may or may not be
   embedded in AD-KDC-ISSUED or similar.  KDC policy approval is
   expressed via embedding these authorization-data in AD-KDC-ISSUED or
   similar.  KDC policy application is requested by placing the
   authorization-data in the TGS-REQ for a Ticket.

   The authorization-data elements are:

   AD-IMPERSONATE-ONLY  Indicates that the Ticket may only be used to
      impersonate the given principal.  This is intended only for
      constraining impersonator credentials to impersonating a single
      given principal.  The presence of this authorization-data element
      does not denote an impersonation attempt.  KDCs SHOULD willingly
      include this authorization-data element in any Ticket at the
      request of the client, regardless of the element's contents, but
      KDCs MUST NOT include this authorization-data element in an AD-
      KDC-ISSUED or similar.

   AD-IMPERSONATE  Indicates that the Ticket or Authenticator is
      intended to impersonate the given principal.  KDCs MUST NOT issue
      Tickets with this authorization-data element if its contents do
      not match the client's Ticket's AD-IMPERSONATE-ONLY element (if
      present).  KDCs MUST NOT issue Tickets with this element embedded
      in an AD-KDC-ISSUED or similar unless the KDC blesses the
      impersonation; conversely, if the KDC blesses the impersonation
      then the KDC MUST place this authorization-data element in an AD-
      KDC-ISSUED or similar element.

   Clients that do not need or want KDC blessing SHOULD only assert AD-
   IMPERSONATE in Authenticators.

   The ASN.1 description of these elements' contents is as follows:

    Authz-ID ::= SEQUENCE {
        application-type [0] OCTET STRING, -- URN?  XXX expand
        authz-id [1] OCTET STRING -- the actual authz-id
    }

    AD-IMPERSONATE-ONLY ::= SEQUENCE {
        -- One of these two MUST be present; both MAY be present
        principal [0] OCTET STRING OPTIONAL, -- exported name token
        authz-ids [1] SEQUENCE OF Authz-ID OPTIONAL
    }

    AD-IMPERSONATE ::= SEQUENCE {
        -- One of these two MUST be present; both MAY be present
        principal [0] OCTET STRING OPTIONAL, -- exported name token
        authz-id [1] Authz-ID OPTIONAL
    }

               Figure 1: ASN.1 for impersonation AD elements

   DER encoding with IMPLICIT tagging MUST be used to encode these
   authorization-data elements.


4.  Sample Code

    <TBD>

                     Figure 2: Impersonator-side code

    <TBD>

                       Figure 3: Acceptor-side code


5.  Security Considerations

   Impersonator applications SHOULD use a credential that denotes no
   other privileges.  Impersonator applications SHOULD use a credential
   that is constrained to only impersonate a given principal.
   Credential issuers SHOULD NOT permit credential delegation by known
   (to the issuer) impersonator principals unless the credential to be
   delegated is constrained to impersonating one principal.  These
   recommendations help limit any damage from accidentally delegating an
   impersonator's credential.

   For Kerberos this means that KDCs SHOULD NOT issue Ticket Granting
   Tickets (TGTs) with the FORWARDED or FORWARDABLE flags set if the
   Ticket's client principal is known to be an impersonator and the AD-
   IMPERSONATE-ONLY authorization-data element is not present in the
   client's Ticket or KDC-REQ.

   Aside from accidental delegation of unconstrained impersonator
   credentials, this approach fails safe: applications that are not
   aware of impersonation will not think that they are talking to the
   principal that an impersonator wishes to impersonate.


6.  IANA Considerations

   ...


7.  Informative References


8.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC1964]  Linn, J., "The Kerberos Version 5 GSS-API Mechanism",
              RFC 1964, June 1996.

   [RFC2743]  Linn, J., "Generic Security Service Application Program
              Interface Version 2, Update 1", RFC 2743, January 2000.

   [RFC2744]  Wray, J., "Generic Security Service API Version 2 :
              C-bindings", RFC 2744, January 2000.

   [RFC4120]  Neuman, C., Yu, T., Hartman, S., and K. Raeburn, "The
              Kerberos Network Authentication Service (V5)", RFC 4120,
              July 2005.

   [RFC4121]  Zhu, L., Jaganathan, K., and S. Hartman, "The Kerberos
              Version 5 Generic Security Service Application Program
              Interface (GSS-API) Mechanism: Version 2", RFC 4121,
              July 2005.

   [RFC4422]  Melnikov, A. and K. Zeilenga, "Simple Authentication and
              Security Layer (SASL)", RFC 4422, June 2006.

   [RFC6680]  Williams, N., Johansson, L., Hartman, S., and S.
              Josefsson, "Generic Security Service Application
              Programming Interface (GSS-API) Naming Extensions",
              RFC 6680, August 2012.

   [I-D.williams-kitten-generic-naming-attributes]
              Williams, N., "Generic Naming Attributes for the Generic
              Security Services Application Programming Interface (GSS-
              API)", draft-williams-kitten-generic-naming-attributes-01
              (work in progress), August 2013.


Author's Address

   Nicolas Williams
   Cryptonector, LLC

   Email: nico@cryptonector.com

