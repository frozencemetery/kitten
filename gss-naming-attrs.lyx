#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass docbook
\use_default_options true
\maintain_unincluded_children false
\begin_local_layout
Format 31

InsetLayout Flex:PI_Strict
    LyXType Custom
    HTMLTag div
    LabelString PI_Strict
End

InsetLayout Flex:PI
    LyXType Custom
    HTMLTag div
    LabelString PI
End

InsetLayout Flex:PI_SymRefs
    LyXType Custom
    HTMLTag div
    LabelString PI_SymRefs
End

InsetLayout Flex:PI_SortRefs
    LyXType Custom
    HTMLTag div
    LabelString PI_SortRefs
End

InsetLayout Flex:PI_TOC
    LyXType Custom
    HTMLTag div
    LabelString PI_TOC
End

InsetLayout Flex:PI_TOCIndent
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCIndent
End

InsetLayout Flex:PI_TOCDepth
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCDepth
End

InsetLayout Flex:PI_TOCNarrow
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCNarrow
End

InsetLayout Flex:PI_TOCCompact
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCCompact
End

InsetLayout Flex:PI_TOCAppendix
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCAppendix
End

InsetLayout Flex:DocName
    LyXType Custom
    HTMLTag div
    LabelString DocName
End

InsetLayout Flex:IntendedStatus
    LyXType Custom
    HTMLTag div
    LabelString IntendedStatus
End

InsetLayout Flex:Updates
    LyXType Custom
    HTMLTag div
    LabelString Updates
End

InsetLayout Flex:Obsoletes
    LyXType Custom
    HTMLTag div
    LabelString Obsoletes
End

InsetLayout Flex:SeriesNo
    LyXType Custom
    HTMLTag div
    LabelString SeriesNo
End

InsetLayout Flex:RFCNumber
    LyXType Custom
    HTMLTag div
    LabelString RFCNumber
End

InsetLayout Flex:IPR
    LyXType Custom
    HTMLTag div
    LabelString IPR
End

InsetLayout Flex:IETFArea
    LyXType Custom
    HTMLTag div
    LabelString IETFArea
End

InsetLayout Flex:IETFWorkingGroup
    LyXType Custom
    HTMLTag div
    LabelString IETFWorkingGroup
End

InsetLayout Flex:XML2RFCKeyword
    LyXType Custom
    HTMLTag div
    LabelString XML2RFCKeyword
End

InsetLayout Flex:TitleAbbrev
    LyXType Custom
    HTMLTag div
    LabelString TitleAbbrev
End

InsetLayout Flex:AuthorRole
    LyXType Custom
    HTMLTag div
    LabelString AuthRole
End

InsetLayout Flex:AuthorInitials
    LyXType Custom
    HTMLTag div
    LabelString AuthInitials
End

InsetLayout Flex:AuthorSurname
    LyXType Custom
    HTMLTag div
    LabelString AuthSurname
End

InsetLayout Flex:AuthorOrg
    LyXType Custom
    HTMLTag div
    LabelString AuthOrg
End

InsetLayout Flex:AuthorOrgAbbrev
    LyXType Custom
    HTMLTag div
    LabelString AuthOrgAbbrev
End

InsetLayout Flex:AuthorEmailAddr
    LyXType Custom
    HTMLTag div
    LabelString AuthEmailAddr
End

InsetLayout Flex:AuthorAddrStreet
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrStreet
End

InsetLayout Flex:AuthorAddrCity
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCity
End

InsetLayout Flex:AuthorAddrRegion
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrRegion
End

InsetLayout Flex:AuthorAddrCode
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCode
End

InsetLayout Flex:AuthorAddrCountry
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCountry
End

InsetLayout Flex:EntityXRef
    LyXType Custom
    HTMLTag div
    LabelString EntityXRef
End

InsetLayout Flex:BibXML
    LyXType Custom
    HTMLTag div
    LabelString BibXML
End

InsetLayout Flex:EmbeddedBibXML
    LyXType Custom
    HTMLTag div
    LabelString EmbeddedBibXML
End
\end_local_layout
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman cmr
\font_sans cmss
\font_typewriter cmtt
\font_default_family ttdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Generic Naming Attributes for the Generic Security Services Application
 Programming Interface (GSS-API)
\end_layout

\begin_layout Standard
\begin_inset Flex DocName
status open

\begin_layout Plain Layout
draft-williams-kitten-generic-naming-attributes-01
\end_layout

\end_inset


\begin_inset Flex IPR
status open

\begin_layout Plain Layout
trust200902
\end_layout

\end_inset


\begin_inset Flex IntendedStatus
status open

\begin_layout Plain Layout
std
\end_layout

\end_inset


\begin_inset Flex TitleAbbrev
status open

\begin_layout Plain Layout
Simple GSS
\end_layout

\end_inset


\begin_inset Flex IETFArea
status open

\begin_layout Plain Layout
Security Area
\end_layout

\end_inset


\begin_inset Flex XML2RFCKeyword
status open

\begin_layout Plain Layout
Internet-Draft
\end_layout

\end_inset


\begin_inset Flex Updates
status open

\begin_layout Plain Layout
2743, 2744
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PI TOC
status open

\begin_layout Plain Layout
yes
\end_layout

\end_inset


\begin_inset Flex PI SymRefs
status open

\begin_layout Plain Layout
yes
\end_layout

\end_inset


\begin_inset Flex PI TOCIndent
status open

\begin_layout Plain Layout
no
\end_layout

\end_inset


\begin_inset Flex PI
status open

\begin_layout Plain Layout
comments="yes"
\end_layout

\end_inset


\begin_inset Flex PI
status open

\begin_layout Plain Layout
inline="yes"
\end_layout

\end_inset


\end_layout

\begin_layout Author
Nicolas Williams
\begin_inset Flex AuthorOrg
status open

\begin_layout Plain Layout
Cryptonector, LLC
\end_layout

\end_inset


\begin_inset Flex AuthorOrgAbbrev
status open

\begin_layout Plain Layout
Cryptonector
\end_layout

\end_inset


\begin_inset Flex AuthorEmailAddr
status open

\begin_layout Plain Layout
nico@cryptonector.com
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
This document specifies several useful generic naming attributes for use
 with the Generic Security Services Application Programming Interface (GSS-API)
 Naming Extensions specified in RFC6680.
\end_layout

\begin_layout Abstract
These attributes allow applications to extract discrete components of a
 GSS-API 
\begin_inset Quotes eld
\end_inset

mechanism name
\begin_inset Quotes erd
\end_inset

 (MN) object: issuer (e.g., realm name, domain name, certification authority
 name), service and host names (for host-based service names), user names,
 and others.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction and Motivation
\end_layout

\begin_layout Standard
The Generic Security Services Application Programming Interface (GSS-API)
 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC2743
\end_layout

\end_inset

 allows applications -and application protocol specifications- to use various
 security mechanisms in a generic way.
 There are some shortcomings of this API that preclude a fully-generic treatment
 of security mechanisms.
 This document builds on the naming extensions to the GSS-API 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC6680
\end_layout

\end_inset

 to correct some of those shortcomings.
\end_layout

\begin_layout Standard
In RFC6680 we introduced an interface by which to access 
\begin_inset Quotes eld
\end_inset

attributes
\begin_inset Quotes erd
\end_inset

 of names, but we did not specify any attributes.
 This document specifies some such attributes.
 Some of the new attributes are specifically intended to make it possible
 to use the GSS-API in a mechanism-generic way in common use cases where
 it is otherwise not possible to do so.
\end_layout

\begin_layout Standard
For example, some applications need to be able to observe the discrete elements
 of a peer principal's host-based service name, but they generally could
 only do so by parsing mechanism-specific display syntaxes or exported name
 token formats.
 Such applications are inherently not generic: they can only function correctly
 when used with security mechanism whose principal naming conventions/formats
 the applications understand.
\end_layout

\begin_layout Standard
More generally, we use the the extended naming interface to introduce an
 attribute model of principal naming.
\end_layout

\begin_layout Subsection
Naming Constraints
\end_layout

\begin_layout Standard
This document also introduces a notion of naming constraints, not unlike
 PKIX's 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC5280
\end_layout

\end_inset

.
 Naming constraints apply to 
\begin_inset Quotes eld
\end_inset

issuers
\begin_inset Quotes erd
\end_inset

 of principal names and/or their attributes.
 For example, to Kerberos 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC4120
\end_layout

\end_inset

 realms, to PKIX certification authorities, to identity providers (IdPs),
 and so on.
 The goal is allow specification of policies which constrain the set of
 principal names that a given issuer can issue credentials for.
\end_layout

\begin_layout Standard
For example, the Kerberos realm FOO.EXAMPLE would generally not be expected
 to issue credentials to host-based principals in domains other than 
\begin_inset Quotes eld
\end_inset

foo.example
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
For each concrete attribute specified below there are several ways to inquire
 a NAME's value for that attribute:
\end_layout

\begin_layout Enumerate
with naming constraint checking, providing no output if naming constraints
 are violated;
\end_layout

\begin_layout Enumerate
with naming constraint checking, providing an output indicator of naming
 constraint violations;
\end_layout

\begin_layout Enumerate
without naming constraint checking;
\end_layout

\begin_layout Enumerate
any of the above with 
\begin_inset Quotes eld
\end_inset

fast
\begin_inset Quotes erd
\end_inset

 (no slow I/O involved) naming constraint checking.
\end_layout

\begin_layout Standard
(1) is the default behavior.
 The others are obtained by adding an appropriate prefix to the attribute
 name.
\end_layout

\begin_layout Standard
Existing security mechanisms may not have any formal notion of naming constraint
s, but it is common to have some naming constraint conventions nonetheless.
 For example, Kerberos realm naming conventions are that realm names should
 mirror Domain Name System (DNS) 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC1035
\end_layout

\end_inset

 domain names, and that hostnames embedded in Kerberos principal names should
 a) be fully-qualified, b) within the domain corresponding to the DNS domain
 name derived from the realm's name.
 Or a Kerberos implementation might lookup a host's realm and check that
 it matches the principal's realm.
 Naming constraints should be formalized for all GSS-API security mechanisms.
\end_layout

\begin_layout Subsection
Conventions used in this document
\end_layout

\begin_layout Standard
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
 "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are
 to be interpreted as described in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC2119
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Generic Attributes
\end_layout

\begin_layout Standard
We add a number of generic name attributes, to be used via the GSS-API extended
 naming facility 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC6680
\end_layout

\end_inset

.
 Some of these attributes can be used as prefixes of other attributes, that
 is, they can be used to modify the semantics of other attributes (see section
 6 of RFC6680).
\end_layout

\begin_layout Standard
Note: in all cases the display form of each attribute SHALL consist of text
 using the character set, codeset, and encoding from the caller's locale.
\end_layout

\begin_layout Subsection
Concrete Attributes
\end_layout

\begin_layout Standard
These attributes generally have a single value each.
 Only one of these attributes can also be used a prefix: the issuer name
 attribute.
\end_layout

\begin_layout Subsubsection
Issuer Name
\end_layout

\begin_layout Standard
We add an attribute by which to obtain a name of an issuer of a mechanism
 name (MN) or of an attribute of an MN.
 The API name for this attribute is GSS_C_ATTR_GENERIC_ISSUERNAME, and it's
 actual attribute name is 
\begin_inset Quotes eld
\end_inset

urn:ietf:id:ietf-kitten-name-attrs-00-issuername
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The display form of issuer names is mechanism-specific.
\end_layout

\begin_layout Standard
The non-display form of issuer names SHALL be the exported name token form
 of the issuer's name.
 Not all mechanisms will support issuer names as MNs, therefore implementations
 MAY output a null non-display value.
\end_layout

\begin_layout Standard
For example, for the Kerberos mechanism 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 an issuer name would generally (but not always!) be a Kerberos realm name,
 probably displayed as just the realm name.
 (But note that there is not yet a Kerberos realm name as MN specification.
 We will specify one separately.)
\end_layout

\begin_layout Standard
This attribute can be used as prefix of other attributes.
 When used as a prefix, this attribute indicates that the application wishes
 to know the name of the issuer of the prefixed attribute of the given MN.
\end_layout

\begin_layout Subsubsection
User Name
\end_layout

\begin_layout Standard
We add an attribute by which to obtain the component of an MN naming a user.
 The API name for this attribute is GSS_C_ATTR_GENERIC_USERNAME, and it's
 actual attribute name is 
\begin_inset Quotes eld
\end_inset

urn:ietf:id:ietf-kitten-name-attrs-00-username
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The display form of user names is mechanism-specific.
\end_layout

\begin_layout Standard
The non-display form of user names is mechanism-specific.
\end_layout

\begin_layout Subsubsection
Service Name
\end_layout

\begin_layout Standard
We add an attribute by which to obtain the component of an MN naming a service
 as part of a host- or domain-based service name.
 The API name for this attribute is GSS_C_ATTR_GENERIC_SERVICENAME, and
 it's actual attribute name is 
\begin_inset Quotes eld
\end_inset

urn:ietf:id:ietf-kitten-name-attrs-00-servicename
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The non-display form of the service name SHALL be the UTF-8 encoding of
 the service name.
\end_layout

\begin_layout Subsubsection
Host Name
\end_layout

\begin_layout Standard
We add an attribute by which to obtain the component of an MN naming a host
 as part of a host- or domain-based service name.
 The API name for this attribute is GSS_C_ATTR_GENERIC_HOSTNAME, and it's
 actual attribute name is 
\begin_inset Quotes eld
\end_inset

urn:ietf:id:ietf-kitten-name-attrs-00-hostname
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The display form of a host name MAY be stylized and SHOULD NOT be A-labels.
 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC5890
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The non-display form of host names SHOULD be a character string as described
 in 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC1123
\end_layout

\end_inset

, and SHOULD NOT be U-labels 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC5890
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Domain Name
\end_layout

\begin_layout Standard
We add an attribute by which to obtain the component of an MN naming a domain
 as part of a domain-based service name.
 The API name for this attribute is GSS_C_ATTR_GENERIC_DOMAINNAME, and it's
 actual attribute name is 
\begin_inset Quotes eld
\end_inset

urn:ietf:id:ietf-kitten-name-attrs-00-domainname
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The display form of a domain name MAY be stylized and SHOULD NOT be A-labels.
 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC5890
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The non-display form of domain names SHOULD be a character string as described
 in 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC1123
\end_layout

\end_inset

, and SHOULD NOT be U-labels 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC5890
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Prefix Attributes
\end_layout

\begin_layout Standard
GSS_Get_name_attribute() using attributes described in the preceding section
 SHALL fail if there are any name constraints that can be applied to the
 issuers of those names and, in applying those constraints, it is discovered
 that the issuer was not permitted to issue credentials for the MN.
\end_layout

\begin_layout Standard
For example, a Kerberos realm named 
\begin_inset Quotes eld
\end_inset

FOO.EXAMPLE
\begin_inset Quotes erd
\end_inset

 might not be expected to issue credentials (tickets, keys) to host-based
 service names for hosts not ending in 
\begin_inset Quotes eld
\end_inset

.foo.example
\begin_inset Quotes erd
\end_inset

 or which are not 
\begin_inset Quotes eld
\end_inset

foo.example
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Several generic attribute prefixes are described below for overriding this
 behavior.
\end_layout

\begin_layout Subsubsection
GSS_C_ATTR_GENERIC_UNCONSTRAINED
\end_layout

\begin_layout Standard
This attribute prefix, named GSS_C_ATTR_GENERIC_UNCONSTRAINED in the API,
 and with an actual name of 
\begin_inset Quotes eld
\end_inset

urn:ietf:id:ietf-kitten-name-attrs-00-gen-unconstrained
\begin_inset Quotes erd
\end_inset

, indicates that the application wants the value of the prefixed attribute
 without any name constraint checking.
\end_layout

\begin_layout Subsubsection
GSS_C_ATTR_GENERIC_UNCONSTRAINED_OK
\end_layout

\begin_layout Standard
This attribute prefix, named GSS_C_ATTR_GENERIC_UNCONSTRAINED_OK in the
 API, and with an actual name of 
\begin_inset Quotes eld
\end_inset

urn:ietf:id:ietf-kitten-name-attrs-00-gen-unconstrained-ok
\begin_inset Quotes erd
\end_inset

, indicates that the application wants the value of the prefixed attribute
 regardless of any applicable naming constraints, but to indicate the name
 constraint status via the 'authenticated' output parameter of the GSS_Get_name_
attribute() interface.
\end_layout

\begin_layout Subsubsection
GSS_C_ATTR_GENERIC_FAST
\end_layout

\begin_layout Standard
This attribute prefix, named GSS_C_ATTR_GENERIC_FAST in the API, and with
 an actual name of 
\begin_inset Quotes eld
\end_inset

urn:ietf:id:ietf-kitten-name-attrs-00-gen-fast
\begin_inset Quotes erd
\end_inset

, indicates that the application requires that the mechanism not perform
 any slow operations (e.g., connecting to a directory for the purposes of
 name constraint validation) in obtaining the prefixed attribute of the
 given MN.
\end_layout

\begin_layout Section
Local Name Attributes
\end_layout

\begin_layout Standard
Normally an Internet specification would not be expected to specify any
 local name attributes of GSS names.
 However, there is one common and very useful local name attribute, which
 we specify below.
 Implementations are free to use different names for this attribute or exclude
 it altogether -- it is a local name attribute, after all.
\end_layout

\begin_layout Subsection
GSS_C_ATTR_LOCAL_LOGIN_USER
\end_layout

\begin_layout Standard
This attribute, with suggested API symbolic name GSS_C_ATTR_LOCAL_LOGIN_USER,
 and suggested actual name 
\begin_inset Quotes eld
\end_inset

local-login-user
\begin_inset Quotes erd
\end_inset

, requests a local user name corresponding to the given MN, if any.
\end_layout

\begin_layout Standard
Obtaining the local user name corresponding to an MN may require complex
 name mapping or lookup operations that are completely implementation-defined.
\end_layout

\begin_layout Section
Suggested Mechanism-Specific Name Attributes (INFORMATIONAL)
\end_layout

\begin_layout RevisionRemark
This section should really be split out into separate Internet-Drafts.
 It is here only because the author lacks the time at the moment of writing
 to create such separate I-Ds.
\end_layout

\begin_layout Subsection
Suggested Kerberos-Specific Name Attributes
\end_layout

\begin_layout Itemize
realm (corresponding to issuer name)
\end_layout

\begin_layout Itemize
component 0 (first component of a principal name)
\end_layout

\begin_layout Itemize
component 1 (second component of a principal name)
\end_layout

\begin_layout Itemize
..
\end_layout

\begin_layout Itemize
component 9 (10th component of a principal name)
\end_layout

\begin_layout Itemize
components (ordered set of components of a principal name)
\end_layout

\begin_layout Itemize
transit path (ordered set of realm and CA names)
\end_layout

\begin_layout Itemize
specific authorization data elements
\end_layout

\begin_layout Itemize
PKINIT client certificate
\end_layout

\begin_layout Itemize
session key enctype
\end_layout

\begin_layout Itemize
enctypes involved in transit path (this would only be available to initiators)
\end_layout

\begin_layout Subsection
Suggested PKU2U-Specific Name Attributes
\end_layout

\begin_layout RevisionRemark
Add reference to PKU2U.
\end_layout

\begin_layout Itemize
issuer CA name
\end_layout

\begin_layout Itemize
trust path to a trust anchor
\end_layout

\begin_layout Itemize
certificate
\end_layout

\begin_layout Itemize
certificate subject public key
\end_layout

\begin_layout Itemize
certificate subject name
\end_layout

\begin_layout Itemize
certificate subject alternate names
\end_layout

\begin_layout Itemize
specific certificate extensions
\end_layout

\begin_layout Itemize
certificate algorithm names
\end_layout

\begin_layout Itemize
session key enctype
\end_layout

\begin_layout Section
Security Considerations
\end_layout

\begin_layout Standard
[Add text regarding name constraint checking and explaining the default-to-safe
 design of the generic name attributes defined in section 2.]
\end_layout

\begin_layout Section
IANA Considerations
\end_layout

\begin_layout Standard
[Add text regarding the registration and assignment of the name attributes
 described in the preceding sections.
 In particular we should want these attributes' names to not reflect an
 Internet-Draft name, but an RFC number.]
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:References"

\end_inset

Normative References
\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc2119"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc1035"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc1123"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1123.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc2743"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2743.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc2744"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2744.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc5890"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5890.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc6680"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6680.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Informative References
\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc4120"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4120.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc4121"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4121.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc5280"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
