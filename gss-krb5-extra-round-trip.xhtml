<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/TR/2001/REC-MathML2-20010221/dtd/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.0.6" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>Negotiation of Extra Security Context Tokens for Kerberos V5 Generic Security Services Mechanism</title>

<!-- Text Class Preamble -->
<style type="text/css">
div.toc {
margin: 2em 0em;
border-style: solid;
border-width: 2px 0px;
padding: 1em 0em;
}
div.tochead { font-size: x-large; font-weight: bold; }
div.lyxtoc-0 {
margin: 2em 0em 0em 0em;
font-size: xx-large;
font-weight: bold;
}
div.lyxtoc-1 {
margin: 1em 0em 0em 0em;
font-size: x-large;
font-weight: bold;
}
div.lyxtoc-2 {
margin: 0em 0em 0em 1em;
font-size: large;
font-weight: normal;
}
div.lyxtoc-3 { margin: 0em 0em 0em 0.5em; font-size: medium; }
div.lyxtoc-4 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-5 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-6 { margin: 0em 0em 0em 0.5em; }
a.tocentry {
text-decoration: none;
color: black;
}
a.tocentry:visited { color: black; }
a.tocarrow {
font-weight: bold;
text-decoration: none;
color: #909090;
}
a.tocarrow:visited { color: #C0C0C0; }
</style>

<!-- Preamble Snippets -->

<!-- Layout-provided Styles -->
<style type='text/css'>
h1.title {
font-size: x-large;
margin-bottom: 1ex;
text-align: center;

}
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
div.author {
font-size: large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.abstract {
font-size: small;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
margin-right: 3ex;
text-align: left;

}
div.abstract_label {
font-weight: bold;
font-size: large;
text-align: center;

}

div.abstract {
margin: 4ex;
}
div.abstract_item {
font-size: small;
padding-top: 1ex;
}
div.abstract_label {
font-weight: bold;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
h3.subsection {
font-weight: bold;
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
ol.enumerate {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
h4.subsubsection {
font-weight: bold;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.4ex;
text-align: left;

}
div.revisionremark {
text-align: left;

}
div.flex_docname {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ipr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_intendedstatus {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_titleabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ietfarea {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_xml_rfckeyword {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_updates {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_toc {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_symrefs {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_tocindent {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororg {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororgabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authoremailaddr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_entityxref {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.float {
border: 2px solid black;
text-align: center;
}
div.listings {
font-family: monospace;
}
div.float-caption {
text-align: center;
border: 2px solid black;
padding: 1ex;
margin: 1ex;
}
div.flex_bibxml {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_embeddedbibxml {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
</style>
</head>
<body>
<h1 class="title"><a id='magicparlabel-1' />
Negotiation of Extra Security Context Tokens for Kerberos V5 Generic Security Services Mechanism</h1>
<div class="standard"><a id='magicparlabel-2' />
<div class="flex_docname"><div class="plain_layout"><a id='magicparlabel-6' />
draft-williams-kitten-krb5-extra-rt-02</div>
</div><div class="flex_ipr"><div class="plain_layout"><a id='magicparlabel-10' />
trust200902</div>
</div><div class="flex_intendedstatus"><div class="plain_layout"><a id='magicparlabel-14' />
std</div>
</div><div class="flex_titleabbrev"><div class="plain_layout"><a id='magicparlabel-18' />
Kerberos Extra AP</div>
</div><div class="flex_ietfarea"><div class="plain_layout"><a id='magicparlabel-22' />
Security Area</div>
</div><div class="flex_xml_rfckeyword"><div class="plain_layout"><a id='magicparlabel-26' />
Internet-Draft</div>
</div><div class="flex_updates"><div class="plain_layout"><a id='magicparlabel-30' />
4121</div>
</div></div>

<div class="standard"><a id='magicparlabel-31' />
<div class="flex_pi_toc"><div class="plain_layout"><a id='magicparlabel-35' />
yes</div>
</div><div class="flex_pi_symrefs"><div class="plain_layout"><a id='magicparlabel-39' />
yes</div>
</div><div class="flex_pi_tocindent"><div class="plain_layout"><a id='magicparlabel-43' />
no</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-47' />
comments="yes"</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-51' />
inline="yes"</div>
</div></div>

<div class="author"><div class="author_item"><a id='magicparlabel-52' />
Nicolas Williams<div class="flex_authororg"><div class="plain_layout"><a id='magicparlabel-56' />
Cryptonector, LLC</div>
</div><div class="flex_authororgabbrev"><div class="plain_layout"><a id='magicparlabel-60' />
Cryptonector</div>
</div><div class="flex_authoremailaddr"><div class="plain_layout"><a id='magicparlabel-64' />
nico@cryptonector.com</div>
</div></div>
<div class="author_item"><a id='magicparlabel-65' />
Roland Charles Dowdeswell<div class="flex_authororg"><div class="plain_layout"><a id='magicparlabel-69' />
Dowdeswell Security Architecture</div>
</div><div class="flex_authororgabbrev"><div class="plain_layout"><a id='magicparlabel-73' />
Dowdeswell Security Architecture</div>
</div><div class="flex_authoremailaddr"><div class="plain_layout"><a id='magicparlabel-77' />
elric@imrryr.org</div>
</div></div>
</div>

<div class="abstract"><div class="abstract_label">Abstract</div>
<div class="abstract_item"><a id='magicparlabel-78' />
This Internet-Draft proposes an extension to the Kerberos V5 security mechanism for the Generic Security Services Application Programming Interface (GSS-API) for using extra security context tokens in order to recover from certain errors. Other benefits include: user-to-user authentication, authenticated errors, replay cache avoidance, and others.</div>
</div>
<div class="standard"><a id='magicparlabel-79' />
</div>
<div class='toc'><div class='tochead part_'>Table of Contents</div>

<div class='lyxtoc-1'><a href='#magicparlabel-80' class='tocentry'>1 Introduction</a> <a href='#magicparlabel-80' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-90' class='tocentry'>1.1 Conventions used in this document</a> <a href='#magicparlabel-90' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-96' class='tocentry'>2 Negotiation</a> <a href='#magicparlabel-96' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-118' class='tocentry'>2.1 Error Recovery</a> <a href='#magicparlabel-118' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-135' class='tocentry'>2.2 Number of Security Context Tokens</a> <a href='#magicparlabel-135' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-140' class='tocentry'>2.3 PROT_READY</a> <a href='#magicparlabel-140' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-142' class='tocentry'>3 ASN.1 for New Protocol Elements</a> <a href='#magicparlabel-142' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-199' class='tocentry'>4 Replay Cache Avoidance</a> <a href='#magicparlabel-199' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-202' class='tocentry'>5 User-to-User Authentication</a> <a href='#magicparlabel-202' class='tocarrow'>&gt;</a>


<div class='lyxtoc-2'><div class='lyxtoc-3'><a href='#magicparlabel-210' class='tocentry'>5.0.1 Negotiation Issues for User-to-User Authentication</a> <a href='#magicparlabel-210' class='tocarrow'>&gt;</a></div>
</div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-217' class='tocentry'>6 Other Requirements, Recommendations, and Non-Requirements</a> <a href='#magicparlabel-217' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-220' class='tocentry'>7 Security Considerations</a> <a href='#magicparlabel-220' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-226' class='tocentry'>8 IANA Considerations</a> <a href='#magicparlabel-226' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-228' class='tocentry'>9 Normative References</a> <a href='#magicparlabel-228' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-264' class='tocentry'>10 Informative References</a> <a href='#magicparlabel-264' class='tocarrow'>&gt;</a></div>
</div>

<h2 class="section"><span class="section_label">1</span> <a id='magicparlabel-80' />
Introduction</h2>
<div class="standard"><a id='magicparlabel-81' />
The Kerberos V5 <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-85' />
RFC4120</div>
</div> AP protocol, and therefore the Kerberos V5 GSS mechanism <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-89' />
RFC4121</div>
</div> security context token exchange, is a one-round trip protocol. Occasionally there are errors that the protocol could recover from by using an additional round trip, but until now there was no way to execute such an additional round trip. For many application protocols the failure of the Kerberos AP protocol is fatal, requiring closing TCP connections and starting over; often there is no automatic recovery. This document proposes a negotiation of additional security context tokens for automatic recovery from certain errors. This is done in a backwards-compatible way, thus retaining the existing mechanism OID for the Kerberos V5 GSS mechanism. Additionally we add support for user-to-user authentication and authenticated errors, and provide a way to avoid the need for replay caching.</div>
<h3 class="subsection"><span class="subsection_label">1.1</span> <a id='magicparlabel-90' />
Conventions used in this document</h3>
<div class="standard"><a id='magicparlabel-91' />
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-95' />
RFC2119</div>
</div>.</div>
<h2 class="section"><span class="section_label">2</span> <a id='magicparlabel-96' />
Negotiation</h2>
<div class="standard"><a id='magicparlabel-97' />
We introduce the following new protocol elements. A partial ASN.1 <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-101' />
CCITT.X680.2002</div>
</div> module (for inclusion in the base Kerberos ASN.1 module) is given in <a href="#sub_ASN_1_for_New">3</a>, and references to its contents are made below.</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-102' />
a new ap-options flag for use in the clear-text part of AP-REQs to indicate the desire for an extra round trip if need be;</li>
<li class="itemize_item"><a id='magicparlabel-103' />
a new Authorization-Data element for use in Authenticators for quoting back a challenge nonce from the acceptor;</li>
<li class="itemize_item"><a id='magicparlabel-104' />
a new PDU: KRB-ERROR2, with additional fields and support for authenticated errors.</li>
</ul>
<div class="standard"><a id='magicparlabel-105' />
No new interface is needed for GSS-API applications to use this feature.</div>

<div class="standard"><a id='magicparlabel-106' />
To use this feature, the Kerberos GSS mechanism MUST act as follows:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-107' />
To request this feature, initiators SHALL add the new ap-options flag to their AP-REQs.</li>
<li class="itemize_item"><a id='magicparlabel-108' />
Acceptors that wish to request an additional security context token can only do so when initiators indicate support for it, and MUST do so by returning a KRB-ERROR2. The encrypted part of the KRB-ERROR2 SHALL be encrypted in one of the following keys: the sub-session key from the AP-REQ's Authenticator if it could be decrypted, else the session key from the Ticket, if it could be decrypted, else the null enc-type/key.</li>
<li class="itemize_item"><a id='magicparlabel-109' />
The KRB-ERROR2 in this case SHALL have a the continue-needed e-flag set when the acceptor is willing to consume another security context token from the initiator; the acceptor SHALL also return GSS_S_CONTINUE_NEEDED to the application in this case.</li>
<li class="itemize_item"><a id='magicparlabel-110' />
Initiators that request this feature and receive a KRB-ERROR2 SHOULD attempt to recover.</li>
<li class="itemize_item"><a id='magicparlabel-111' />
Initiators that request this feature and receive a KRB-ERROR2 with the continue-needed e-flag set SHOULD attempt to recover and MAY produce a token to send to the acceptor: either a KRB-ERROR2 if the initiator failed to recover, or a new AP-REQ (with the traditional GSS-API pseudo-ASN.1 mechanism OID header).

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-112' />
In the successful recovery case the initiator MUST quote the nonce from the KRB-ERROR2 using an AD-CHALLENGE-RESPONSE-NONCE (see below) authorization data element.</li>
</ul>
</li><li class="itemize_item"><a id='magicparlabel-113' />
When it consumes a KRB-ERROR2, GSS_Init_sec_context() can return an error (GSS_S_FAILURE), or attempt recovery and output a new AP-REQ security context token.

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-114' />
When GSS_Init_sec_context() outputs a new AP-REQ security context token, it SHALL return GSS_S_CONTINUE_NEEDED if the application requested mutual authentication, else it SHALL return GSS_S_COMPLETE.</li>
<li class="itemize_item"><a id='magicparlabel-115' />
When GSS_Init_sec_context() returns an error and the acceptor is awaiting a security context token, GSS_Init_sec_context() MAY generate a KRB-ERROR to send to the acceptor.</li>
</ul>
</li><li class="itemize_item"><a id='magicparlabel-116' />
Acceptors MUST reject additional AP-REQs which do not have a challenge response nonce matching the one sent by the acceptor in the previous KRB-ERROR2.</li>
<li class="itemize_item"><a id='magicparlabel-117' />
Acceptors MUST reject initial security context tokens that contain a challenge response nonce.</li>
</ul>
<h3 class="subsection"><span class="subsection_label">2.1</span> <a id='magicparlabel-118' />
Error Recovery</h3>
<div class="standard"><a id='magicparlabel-119' />
The following Kerberos errors can be recovered from automatically using this protocol:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-120' />
KRB_AP_ERR_TKT_EXPIRED: the initiator should get a new service ticket;</li>
<li class="itemize_item"><a id='magicparlabel-121' />
KRB_AP_ERR_TKT_NYV: the initiator should get a new service ticket;</li>
<li class="itemize_item"><a id='magicparlabel-122' />
KRB_AP_ERR_REPEAT: the initiator should build a new AP-REQ;</li>
<li class="itemize_item"><a id='magicparlabel-123' />
KRB_AP_ERR_SKEW: the initiator should build a new AP-REQ with time corrected for the offset between the initiator's and acceptor's clocks;</li>
<li class="itemize_item"><a id='magicparlabel-124' />
KRB_AP_ERR_BADKEYVER: the initiator should get a new service ticket;</li>
<li class="itemize_item"><a id='magicparlabel-125' />
KRB_AP_PATH_NOT_ACCEPTED: the initiator should get a new service ticket using a different transit path;</li>
<li class="itemize_item"><a id='magicparlabel-126' />
KRB_AP_ERR_INAPP_CKSUM: the initiator should try again with a different checksum type.</li>
</ul>
<div class="standard"><a id='magicparlabel-127' />
Error codes that denote PDU corruption (and/or an active attack) can also be recovered from by attempting a new AP-REQ:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-128' />
KRB_AP_ERR_BAD_INTEGRITY</li>
<li class="itemize_item"><a id='magicparlabel-129' />
KRB_AP_ERR_BADVERSION</li>
<li class="itemize_item"><a id='magicparlabel-130' />
KRB_AP_ERR_BADMATCH</li>
<li class="itemize_item"><a id='magicparlabel-131' />
KRB_AP_ERR_MSG_TYPE</li>
<li class="itemize_item"><a id='magicparlabel-132' />
KRB_AP_ERR_MODIFIED</li>
</ul>
<div class="standard"><a id='magicparlabel-133' />
Other error codes that may be recovered from:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-134' />
KRB_AP_ERR_BADADDR; the acceptor SHOULD include a list of one or more client network addresses as reported by the operating system, but if the acceptor does not then the continue-needed e-flag MUST NOT be included and the error must be final.</li>
</ul>
<h3 class="subsection"><span class="subsection_label">2.2</span> <a id='magicparlabel-135' />
Number of Security Context Tokens</h3>
<div class="standard"><a id='magicparlabel-136' />
The first AP-REQ may well result in an error; the second should not. Therefore acceptors SHOULD return a fatal error when a second error results in one security context establishment attempt, except when the first error is that the initiator should use user-to-user authentication. This limits the maximum number of round trips to two (not user-to-user) or three (user-to-user).</div>

<div class="standard"><a id='magicparlabel-137' />
Initiators and acceptors MUST impose some limit on the maximum number of security context tokens. For the time being that limit is six.</div>

<div class="standard"><a id='magicparlabel-138' />
An initiator that rejects an additional round trip MUST respond with a KRB-ERROR2.</div>

<div class="standard"><a id='magicparlabel-139' />
Note that in the user-to-user cases (see <a href="#sub_User_to_User_Authentication">5</a>) it's possible to have up to three round trips under normal conditions if, for example, the acceptor wishes to avoid the use of replay caches (see <a href="#sub_Replay_Cache_Avoidance">4</a>), or if the initiator's clock is too skewed, for example.</div>
<h3 class="subsection"><span class="subsection_label">2.3</span> <a id='magicparlabel-140' />
PROT_READY</h3>
<div class="standard"><a id='magicparlabel-141' />
It is REQUIRED that each AP-REQ in a security context token exchange replace the sub-session key to be used for PROT_READY per-message tokens. This can conceivably cause failure-to-verify/unwrap errors for some applications (e.g., using datagram transports), but none that they shouldn't have been prepared to handle.</div>
<h2 class="section"><span class="section_label">3</span> <a id='magicparlabel-142' />
<a id="sub_ASN_1_for_New" />
ASN.1 for New Protocol Elements</h2>
<div class="standard"><a id='magicparlabel-143' />
A partial ASN.1 module appears below. This ASN.1 is to be used as if it were part of the base Kerberos ASN.1 module (see RFC4120), therefore the encoding rules to be used are the Distinguished Encoding Rules (DER) <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-147' />
CCITT.X690.2002</div>
</div>, and the environment is one of explicit tagging.</div>

<div class="standard"><a id='magicparlabel-148' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-152' />
</div>
<div class='float float-listings'><pre> APOptions       ::= KerberosFlags
         -- reserved(0),
         -- use-session-key(1),
         -- mutual-required(2) 
         -- continue-needed-ok(TBD)
 
 ad-continue-nonce     Int32 ::= &lt;TBD&gt;
        -- ad-value is challenge nonce from KRB-ERROR2
 
 KrbErrorEncPartFlags ::= KerberosFlags
         -- reserved(0)  [XXX cargo cult!]
         -- use-initiator-subkey(1)
         -- use-ticket-session-key(2)
         -- use-null-enctype(3)
 
 KRB-ERROR2          ::= [APPLICATION &lt;TBD&gt;] SEQUENCE {
         pvno            [0] INTEGER (5),
         msg-type        [1] INTEGER (&lt;TBD&gt;),
         enc-part-key    [2] KrbErrorEncPartFlags,
         enc-part        [3] EncryptedData -- EncKRBErrorPart
 }
 
 ErrorFlags ::= KerberosFlags
         -- reserved(0)  [XXX sounds like cargo cult!]
         -- continue-needed(1)
 
 EncKRBErrorPart    ::= [APPLICATION &lt;TBD&gt;] SEQUENCE {
         challenge-nonce [0] OCTET STRING (16),
         stime           [1] KerberosTime,
         susec           [2] Microseconds,
         error-code      [3] Int32,
         e-flags         [4] ErrorFlags,
         e-text          [5] KerberosString OPTIONAL,
         e-data          [6] OCTET STRING OPTIONAL,
         e-typed-data    [7] TYPED-DATA OPTIONAL,
         tgt             [8] Ticket OPTIONAL, -- for user2user
         ...
 }</pre></div>


<div class="plain_layout"><a id='magicparlabel-194' />
<div class='float-caption float-caption-figure'>Figure 1:<div class="plain_layout"><a id='magicparlabel-198' />
ASN.1 module (with explicit tagging)</div>
</div></div>
</div>

<h2 class="section"><span class="section_label">4</span> <a id='magicparlabel-199' />
<a id="sub_Replay_Cache_Avoidance" />
Replay Cache Avoidance</h2>
<div class="standard"><a id='magicparlabel-200' />
By using an additional AP-REQ and a challenge/response nonce, this protocol is immune to replays of AP-REQ PDUs and does not need a replay cache. Acceptor implementations MUST not insert Authenticators from extra round trips into a replay cache when there are no other old implementations on the same host (and with access to the same acceptor credentials) that ignore critical authorization data or which don't know to reject initial AP-REQs that contain a challenge response nonce.</div>

<div class="standard"><a id='magicparlabel-201' />
In the replay cache avoidance case where there's no actual error (e.g., time skew) the acceptor's KRB-ERROR2 will have KDC_ERR_NONE as the error code, with the continue-needed e-flag.</div>
<h2 class="section"><span class="section_label">5</span> <a id='magicparlabel-202' />
<a id="sub_User_to_User_Authentication" />
User-to-User Authentication</h2>
<div class="standard"><a id='magicparlabel-203' />
There are two user2user authentication cases:</div>

<ol class="enumerate"><li class="enumerate_item"><a id='magicparlabel-204' />
the KDC only allows a service principal to use user2user authentication,</li>
<li class="enumerate_item"><a id='magicparlabel-205' />
the service principal does not know its long-term keys or otherwise wants to use user2user authentication even though the KDC vended a service ticket.</li>
</ol>
<div class="standard"><a id='magicparlabel-206' />
In the first case the initiator knows this because the KDC returns KDC_ERR_MUST_USE_USER2USER. The initiator cannot make a valid AP-REQ in this case, yet it must send an AP-REQ or fail to make even an initial security context token. For this case we propose that the initiator make an AP-REQ with a Ticket with zero-length enc-part (and null enctype) and a zero-length authenticator (and null enctype). The acceptor will fail to process the AP-REQ, of course, and SHOULD respond with a continue-needed KRB-ERROR2 (using the null enc-type for the enc-part) that includes a TGT for the acceptor.</div>

<div class="standard"><a id='magicparlabel-207' />
In the second case the initiator does manage to get a real service ticket for the acceptor but the acceptor nonetheless wishes to use user2user authentication.</div>

<div class="standard"><a id='magicparlabel-208' />
In both cases the acceptor responds with a KRB-ERROR2 with the KRB_AP_ERR_USER_TO_USER_REQUIRED error code and including a TGT for itself.</div>

<div class="standard"><a id='magicparlabel-209' />
In both cases the initiator then does a TGS request with a second ticket to get a new, user2user Ticket. Then the initiator makes a new AP-REQ using the new Ticket, and proceeds.</div>
<h4 class="subsubsection"><span class="subsubsection_label">5.0.1</span> <a id='magicparlabel-210' />
Negotiation Issues for User-to-User Authentication</h4>
<div class="standard"><a id='magicparlabel-211' />
Initiator applications that can negotiate security mechanisms and which have available an existing user-to-user mechanism <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-215' />
I-D.swift-win2k-krb-user2user</div>
</div> as well as the Kerberos V5 GSS mechanism with the user-to-user extension defined here will have a problem: they may end up negotiating the use of the Kerberos V5 GSS mechanism and fail to establish a security context because the acceptor does not support the features defined in this document, but the application might have succeeded if it had selected the user-to-user mechanism.</div>

<div class="revisionremark"><a id='magicparlabel-216' />
Question: how should we address this? We could say &ldquo;give priority to the user-to-user mechanism&rdquo;, but in some cases that might require changes to the acceptor side.</div>
<h2 class="section"><span class="section_label">6</span> <a id='magicparlabel-217' />
Other Requirements, Recommendations, and Non-Requirements</h2>
<div class="standard"><a id='magicparlabel-218' />
All error PDUs in an AP exchange where the AP-REQ has the continue-needed-ok ap-options flag MUST be KRB-ERROR2 PDUs.</div>

<div class="standard"><a id='magicparlabel-219' />
Whenever an acceptor is able to decrypt the Ticket from an AP-REQ and yet wishes or has to output a KRB-ERROR2, then the enc-part of the KRB-ERROR2 MUST be encrypted in either the initiator's sub-session key (from the Authenticator) or the Ticket's session key (if the acceptor could not decrypt the Authenticator).</div>
<h2 class="section"><span class="section_label">7</span> <a id='magicparlabel-220' />
Security Considerations</h2>
<div class="standard"><a id='magicparlabel-221' />
This document deals with security.</div>

<div class="standard"><a id='magicparlabel-222' />
There are a number of unauthenticated protocol elements: the continue-needed-ok flag that the initiator uses to indicate its willingness to have more than one round trip, and some errors. This is unavoidable.</div>

<div class="standard"><a id='magicparlabel-223' />
The new KRB-ERROR2 PDU is cryptographically distinguished from the original mechanism's acceptor success security context token (AP-REQ).</div>

<div class="standard"><a id='magicparlabel-224' />
Not every KRB-ERROR2 can be integrity protected.</div>

<div class="standard"><a id='magicparlabel-225' />
Because in the base Kerberos V5 GSS-API security mechanism all errors are unauthenticated, and because even with this specification some elements are unauthenticated, it is possible for an attacker to cause one peer to think that the security context token exchange has failed while the other thinks it will continue. This can cause an acceptor to waste resources while waiting for additional security context tokens from the initiator. This is not really a new problem, however: acceptor applications should already have suitable timeouts on security context establishment.</div>
<h2 class="section"><span class="section_label">8</span> <a id='magicparlabel-226' />
IANA Considerations</h2>
<div class="revisionremark"><a id='magicparlabel-227' />
Various allocations are required...</div>
<h2 class="section"><span class="section_label">9</span> <a id='magicparlabel-228' />
<a id="sec_References" />
Normative References</h2>
<div class="standard"><a id='magicparlabel-229' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-233' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">rfc2119</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-234' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-238' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2743.xml">rfc2743</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-239' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-243' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2744.xml">rfc2744</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-244' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-248' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4120.xml">rfc4120</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-249' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-253' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4121.xml">rfc4121</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-254' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-258' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml2/reference.CCITT.X680.2002.xml">x680</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-259' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-263' />
<a href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml2/reference.CCITT.X690.2002.xml">x690</a></div>
</div></div>
<h2 class="section"><span class="section_label">10</span> <a id='magicparlabel-264' />
Informative References</h2>
<div class="standard"><a id='magicparlabel-265' />
<div class="flex_embeddedbibxml"><div class="plain_layout"><a id='magicparlabel-269' />
&lt;reference anchor='I-D.swift-win2k-krb-user2user'&gt; &lt;front&gt; &lt;title&gt;User to User Kerberos Authentication using GSS-API&lt;/title&gt; &lt;author initials='M.' surname='Swift' fullname='Michael Swift'&gt; &lt;organization/&gt; &lt;/author&gt; &lt;author initials='J.' surname='Brezak' fullname='John Brezak'&gt; &lt;organization/&gt; &lt;/author&gt; &lt;author initials='P.' surname='Moore' fullname='Patrick Moore'&gt; &lt;organization/&gt; &lt;/author&gt; &lt;date month='February' day='21' year='2011' /&gt; &lt;abstract&gt;&lt;t&gt;The security model of the web platform has evolved over time to meet the needs of new applications and to correct earlier mistakes. Although web security has evolved largely organically, the security model has converged towards a handful of key concepts. This document presents those concepts and provides advice to designers of new pieces of the web platform.&lt;/t&gt;&lt;/abstract&gt; &lt;/front&gt; &lt;seriesInfo name='Internet-Draft' value='draft-swift-win2k-krb-user2user-03' /&gt; &lt;format type='TXT' target='http://www.ietf.org/internet-drafts/draft-swift-win2k-krb-user2user-03.txt' /&gt; &lt;/reference&gt;</div>
</div></div>
</body>
</html>
