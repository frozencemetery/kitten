


Network Working Group                                        N. Williams
Internet-Draft                                              Cryptonector
Updates: 1964, 2743, 2744                               February 5, 2014
(if approved)
Intended status: Standards Track
Expires: August 9, 2014


    Impersonation Naming Attribute for the Generic Security Services
              Application Programming Interface (GSS-API)
        draft-williams-kitten-impersonation-naming-attribute-00

Abstract

   This document describes a method for impersonation of one principal
   by another.  Relying parties are expected to apply policy to decide
   which impersonation attempts they accept.  Trusted third parties may
   provide assistance in evaluating policy.  The proposed system fails
   safe: applications that do not support it see their peers as the
   impersonators, not the impersonated principals.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 9, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect



Williams                 Expires August 9, 2014                 [Page 1]

Internet-Draft              GSS Impersonation              February 2014


   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.    Introduction and Motivation  . . . . . . . . . . . . . . . .  3
   1.1.  Conventions used in this document  . . . . . . . . . . . . .  3
   2.    Generic Impersonation Attributes . . . . . . . . . . . . . .  4
   2.1.  Intended Usage . . . . . . . . . . . . . . . . . . . . . . .  4
   2.2.  Local Policy . . . . . . . . . . . . . . . . . . . . . . . .  5
   2.3.  Apparent Credential Delegation . . . . . . . . . . . . . . .  5
   2.4.  Third-Party Impersonation Policy Assistance  . . . . . . . .  5
   3.    Kerberos Bindings of Impersonation Attributes  . . . . . . .  7
   4.    Sample Code  . . . . . . . . . . . . . . . . . . . . . . . .  9
   5.    Security Requirements and Recommendations  . . . . . . . . . 10
   6.    Comparison to S4U  . . . . . . . . . . . . . . . . . . . . . 11
   7.    Security Considerations  . . . . . . . . . . . . . . . . . . 12
   8.    IANA Considerations  . . . . . . . . . . . . . . . . . . . . 13
   9.    References . . . . . . . . . . . . . . . . . . . . . . . . . 14
   9.1.  Normative References . . . . . . . . . . . . . . . . . . . . 14
   9.2.  Informative References . . . . . . . . . . . . . . . . . . . 14
         Author's Address . . . . . . . . . . . . . . . . . . . . . . 15


























Williams                 Expires August 9, 2014                 [Page 2]

Internet-Draft              GSS Impersonation              February 2014


1.  Introduction and Motivation

   A very common application design involves services that must
   impersonate their clients to other services.  There are two common
   designs for enabling this:

   credential delegation  where clients delegate credentials to the
      impersonators,

   explicit impersonation  where impersonators explicitly state that
      they are impersonating others.

   There exist protocols where the explicit impersonation concept is
   difficult to retrofit.  And there exist protocols where credential
   delegation is the commonly-deployed -and therefore expected- method
   for impersonation.  Therefore explicit impersonation is not
   universally available.

   On the other hand, unconstrained credential delegation is dangerous
   (for obvious reasons).  What to do?

   One answer has been constrained delegation.  In this design the
   credential issuer creates a credential for impersonating the client,
   but in a constrained way (e.g., to only a small set of downstream
   services).  But constrained credential delegation is difficult to
   manage: the constraints must be expressed by parties that aren't
   best-placed to know the desired policy.

   We propose a simple solution for GSS-API applications: have the
   impersonator use their own credential (or one specifically for this
   purpose) and assert the name of the principal to be impersonated as a
   name attribute.  This is very similar to the concept of "authz-id" in
   Simple Authentication and Security Layers (SASL) [RFC4422], but with
   some subtle differences as described below.  We also propose the
   addition of a name attribute with the same semantics as the SASL
   authz-id.

1.1.  Conventions used in this document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].









Williams                 Expires August 9, 2014                 [Page 3]

Internet-Draft              GSS Impersonation              February 2014


2.  Generic Impersonation Attributes

   We define two generic GSS-API naming attributes for impersonation:

   GSS_C_ATTR_IMPERSONATED_PRINCIPAL  This attribute notionally carries
      an exported name token representation of the name of the principal
      to be impersonated by the principal whose CREDENTIAL HANDLE's
      desired NAME has this attribute.  This is subtly different from
      SASL's authz-id concept in that the latter carries an application-
      specific name form while this one carries a mechanism-specific
      name form (though not necessarily the same mechanism as is used to
      authenticate the impersonator!).  When obtained with
      GSS_Get_name_attribute() the display_value of this attribute
      SHOULD be a display form of the impersonated name else it MUST be
      empty, whereas the non-display form MUST be an octet string
      suitable for use as an input to GSS_Import_name() with
      GSS_C_NT_EXPORTED_NAME or GSS_C_NT_COMPOSITE_EXPORT.

   GSS_C_ATTR_AUTHZ_ID  This attribute carries an application-specific
      name form corresponding to an identity that is to be impersonated
      (by the principal whose CREDENTIAL HANDLE's desired NAME has this
      attribute).  This attribute's semantics are exactly like SASL's.
      Interpretation of this attribute's non-display value is
      application-specific; the display value of this attribute is
      empty.

   Mechanisms MAY support credential delegation for credentials with
   these attributes set, however, if they do they MUST constrain the
   delegated credentials such that they may only be used to impersonate
   the same principal or assert the same authz-id as in the security
   context token exchange where the credential was delegated.
   Impersonator applications are encouraged to not delegate
   impersonation credentials; instead their peers should should use
   impersonation if necessary.

   [[anchor1: TBD: Should we specify a way to denote authz-id form,
   e.g., via a URN?  Perhaps by convention the authz-id should generally
   be prefixed with a URN denoting its form, and perhaps there should be
   a URN for denoting "private to the application using it".  Of course,
   that would be an optional convention, and anyways, it's not necessary
   (SASL doesn't have it).]]

2.1.  Intended Usage

   Impersonator applications are expected to create a NAME object for
   their impersonator principal name, set one, the other, or even both
   of the impersonation attributes described in Section 2, acquire a
   credential for this NAME as the desired_name, then use this



Williams                 Expires August 9, 2014                 [Page 4]

Internet-Draft              GSS Impersonation              February 2014


   credential handle with GSS_Init_sec_context() (or even
   GSS_Accept_sec_context()) to authenticate to other services (or
   initiators).

   Impersonator applications SHOULD take care to use an impersonator
   name that does not denote any access or privilege beyond
   impersonation [to peers that will trust it so].

2.2.  Local Policy

   Applications that are not aware of impersonation MUST observe a
   security context's peer's name as the impersonator name:
   impersonation fails safe.

   Applications that are impersonation-aware SHOULD obtain the name of
   the principal to be impersonated and if so, MUST apply local policy
   to determine if the impersonator principal is permitted to
   impersonate the requested principal to the application.

2.3.  Apparent Credential Delegation

   When an initiator uses impersonation but does not request and perform
   credential delegation, the acceptor mechanism SHOULD pretend that the
   initiator delegated a credential to impersonate the same principal/
   authz-id as impersonated to the acceptor if the acceptor has
   credentials for a principal suitable for use as an impersonator.

   When an initiator uses impersonation and does request and
   successfully perform credential delegation, the issuer of the
   delegated credentials SHOULD constrain that credential to carry the
   same impersonation name attributes as the initiator's.

2.4.  Third-Party Impersonation Policy Assistance

   Trusted third parties (e.g., Kerberos KDCs) may reject impersonation
   using policy local to them.  Trusted third parties may also bless
   impersonation attempts, but application local policy must still be
   applied (even if that policy is to accept a trusted third party's
   blessing).

   Trusted third party policy is conveyed to application via their use
   (or non-use) of the GSS_C_ATTR_GENERIC_UNCONSTRAINED or
   GSS_C_ATTR_GENERIC_UNCONSTRAINED_OK name attribute prefixes together
   with the 'authenticated' output of GSS_Get_name_attributes()
   [I-D.williams-kitten-generic-naming-attributes].

   See [I-D.williams-kitten-generic-naming-attributes] for more
   information on the semantics of the GSS_C_ATTR_GENERIC_UNCONSTRAINED



Williams                 Expires August 9, 2014                 [Page 5]

Internet-Draft              GSS Impersonation              February 2014


   and GSS_C_ATTR_GENERIC_UNCONSTRAINED_OK name attribute prefixes.


















































Williams                 Expires August 9, 2014                 [Page 6]

Internet-Draft              GSS Impersonation              February 2014


3.  Kerberos Bindings of Impersonation Attributes

   For Kerberos [RFC4120] we use authorization-data, which may be
   carried in either Tickets or Authenticators, and may or may not be
   embedded in AD-KDC-ISSUED or similar (when embedded in a Ticket).
   KDC policy approval is expressed via embedding these authorization-
   data in AD-KDC-ISSUED or similar (in a Ticket).  KDC policy
   application is requested by placing the authorization-data in the
   TGS-REQ for a Ticket.

   KDC support for all these authorization-data elements is OPTIONAL.

   Use of these authorization-data elements entirely in the
   Authenticator is sufficient for most uses.  Use in Tickets is only
   required for a) application of more general KDC-side policy
   (otherwise the KDC doesn't see who is being impersonated), b) for
   requesting FORWARDED impersonation Tickets (which, as described
   Section 2, is OPTIONAL.

   The authorization-data element is:

   AD-IMPERSONATE  Indicates that the Ticket or Authenticator is
      intended to impersonate the given principal.

   KDCs MUST NOT issue Tickets with this authorization-data element if
   its contents do not match the client's Ticket's AD-IMPERSONATE
   element (if present).  KDCs MUST NOT issue Tickets with this element
   embedded in an AD-KDC-ISSUED or similar unless the KDC blesses the
   impersonation; conversely, if the KDC blesses the impersonation then
   the KDC MUST place this authorization-data element in an AD-KDC-
   ISSUED or similar element.

   Clients MAY embed this in an AD-IF-RELEVANT authorization-data
   element in TGS requests for new Tickets, except when requesting
   forwarded/forwardable Tickets, in which case the element MUST be made
   critical (by not including it in any authorization-data element that
   denotes non-criticality).

   Clients that do not need or do not want KDC blessing SHOULD only
   include AD-IMPERSONATE in Authenticators.  When used in an
   Authenticator the client should include AD-IMPERSONATE in an AD-IF-
   RELEVANT (on the theory that it's safe for the target service to
   observe the impersonator's name instead of the impersonated name),
   but the client MAY make AD-IMPERSONATE critical to ensure that the
   target service rejects the AP-REQ if it does not understand AD-
   IMPERSONATE.

   The ASN.1 description of these elements' contents is as follows:



Williams                 Expires August 9, 2014                 [Page 7]

Internet-Draft              GSS Impersonation              February 2014


    AD-IMPERSONATE ::= SEQUENCE {
        -- One of these two MUST be present; both MAY be present
        principal [0] OCTET STRING OPTIONAL, -- exported name token
        authz-id [1] SEQUENCE OF OCTET STRING OPTIONAL
    }

               Figure 1: ASN.1 for impersonation AD elements

   DER encoding with IMPLICIT tagging MUST be used to encode these
   authorization-data elements.









































Williams                 Expires August 9, 2014                 [Page 8]

Internet-Draft              GSS Impersonation              February 2014


4.  Sample Code

    <TBD>

                     Figure 2: Impersonator-side code

    <TBD>

                       Figure 3: Acceptor-side code










































Williams                 Expires August 9, 2014                 [Page 9]

Internet-Draft              GSS Impersonation              February 2014


5.  Security Requirements and Recommendations

   Impersonator applications SHOULD use a credential that denotes no
   other privileges.  Impersonator applications SHOULD either not
   delegate credentials or the mechanism SHOULD delegate a credential
   that is constrained to only impersonate the same principal as the
   initiator CREDENTIAL HANDLE used to delegate the credential.
   Credential issuers (e.g., Kerberos KDCs) SHOULD NOT permit credential
   delegation by known (to the issuer) impersonator principals unless
   the credential to be delegated is constrained to impersonating one
   principal.  These recommendations help limit any damage from
   accidentally delegating an impersonator's credential.

   For Kerberos this means that KDCs SHOULD NOT issue Ticket Granting
   Tickets (TGTs) with the FORWARDED or FORWARDABLE flags set if the
   Ticket's client principal is known to be an impersonator and the AD-
   IMPERSONATE authorization-data element is not present in the client's
   Ticket and/or TGS-REQ as a critical authorization-data element (if
   it's present in the Ticket but not the TGS-REQ then the KDC MUST copy
   the AD-IMPERSONATE to the Ticket to be issued.

   Kerberos initiators should (as opposed to SHOULD) use impersonator
   names that begin with a zeroth component with this value:
   "IMPERSONATE".

   Aside from accidental delegation of unconstrained impersonator
   credentials, this approach fails safe: applications that are not
   aware of impersonation will not think that they are talking to the
   principal that an impersonator wishes to impersonate.






















Williams                 Expires August 9, 2014                [Page 10]

Internet-Draft              GSS Impersonation              February 2014


6.  Comparison to S4U

   [[anchor2: NOTE: This section is very rough.  References are
   needed.]]

   Our method of impersonation has a number of advantages to S4U:

   o  It is simpler (no need for evidence tickets and related
      cryptographic protocol, no need for KDC-side policy);

   o  It adheres strictly to the Kerberos model whereby application-
      local policy has the last word;

   o  Fails safe when used with peers that do not implement it (and
      therefore do not apply local policy to impersonation attempts).




































Williams                 Expires August 9, 2014                [Page 11]

Internet-Draft              GSS Impersonation              February 2014


7.  Security Considerations

   This entire document deals with security.  Specifically this document
   provides a method for denoting impersonation while failing safe when
   peers do not support this method.  Failing safe means: peers observe
   the impersonator's name, not the impersonated name.

   Local policy is to be used for deciding when impersonators may
   impersonate any one entity to another.  Such policy must be local to
   the impersonators' peers.  Third parties may apply policy as well in
   some cases, but local policy must always be able to reject
   impersonation.  Policy MUST be applied by applications.
   Implementations MAY provide a method by which local policy may be
   indicated in an indirect manner (e.g., via "environment variables")
   and evaluated by the GSS-API provider on behalf of the application;
   this is strictly to avoid having to modify existing GSS-API
   applications, but should not be encouraged beyond that purpose.

   [[anchor3: Should add text about when and why one might need or use
   impersonation.]]































Williams                 Expires August 9, 2014                [Page 12]

Internet-Draft              GSS Impersonation              February 2014


8.  IANA Considerations

   [[anchor4: Request addition of the new GSS name attributes and
   Kerberos authorization-data to the relevant registries.]]















































Williams                 Expires August 9, 2014                [Page 13]

Internet-Draft              GSS Impersonation              February 2014


9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC1964]  Linn, J., "The Kerberos Version 5 GSS-API Mechanism",
              RFC 1964, June 1996.

   [RFC2743]  Linn, J., "Generic Security Service Application Program
              Interface Version 2, Update 1", RFC 2743, January 2000.

   [RFC2744]  Wray, J., "Generic Security Service API Version 2 :
              C-bindings", RFC 2744, January 2000.

   [RFC4120]  Neuman, C., Yu, T., Hartman, S., and K. Raeburn, "The
              Kerberos Network Authentication Service (V5)", RFC 4120,
              July 2005.

   [RFC4121]  Zhu, L., Jaganathan, K., and S. Hartman, "The Kerberos
              Version 5 Generic Security Service Application Program
              Interface (GSS-API) Mechanism: Version 2", RFC 4121,
              July 2005.

   [RFC6680]  Williams, N., Johansson, L., Hartman, S., and S.
              Josefsson, "Generic Security Service Application
              Programming Interface (GSS-API) Naming Extensions",
              RFC 6680, August 2012.

   [I-D.williams-kitten-generic-naming-attributes]
              Williams, N., "Generic Naming Attributes for the Generic
              Security Services Application Programming Interface (GSS-
              API)", draft-williams-kitten-generic-naming-attributes-01
              (work in progress), August 2013.

9.2.  Informative References

   [RFC4422]  Melnikov, A. and K. Zeilenga, "Simple Authentication and
              Security Layer (SASL)", RFC 4422, June 2006.











Williams                 Expires August 9, 2014                [Page 14]

Internet-Draft              GSS Impersonation              February 2014


Author's Address

   Nicolas Williams
   Cryptonector, LLC

   Email: nico@cryptonector.com













































Williams                 Expires August 9, 2014                [Page 15]

