


Network Working Group                                        N. Williams
Internet-Draft                                              Cryptonector
Updates: RFC4121 (if approved)                         February 13, 2013
Intended status: Standards Track
Expires: August 17, 2013


    Negotiation of Extra Round Trip for Kerberos V5 Generic Security
                           Services Mechanism
                 draft-williams-kitten-krb5-extra-rt-00

Abstract

   This Internet-Draft proposes an extension to the Kerberos V5 security
   mechanism for the Generic Security Services Application Programming
   Interface (GSS-API) for using an extra pair of security context
   tokens in order to recover from certain errors.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 17, 2013.

Copyright Notice

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.    Introduction
   1.1.  Conventions used in this document
   2.    Negotiation
   2.1.  ASN.1 for New Protocol Elements
   3.    Security Considerations
   4.    IANA Considerations
   5.    Informative References
   6.    Normative References
         Author's Address


1.  Introduction

   The Kerberos V5 [RFC4120] AP protocol, and therefore the Kerberos V5
   GSS mechanism [RFC4121] security context token exchange, is a one-
   round-trip protocol.  Occasionally there are errors that the protocol
   could recover from by using an additional round trip, but until now
   there was no way to execute such an additional round trip.  For many
   application protocols the failure of the Kerberos AP protocol is
   fatal, requiring closing TCP connections and starting over; often
   there is no automatic recovery.  This document proposes a negotiation
   of an additional round trip for automatic recovery from certain
   errors.

1.1.  Conventions used in this document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].


2.  Negotiation

   We introduce the following new protocol elements:

   o  a new ap-options flag for use in the cleartext part of AP-REQs to
      indicate the desire for an extra round trip if need be;

   o  a new Authorization-Data element for use in Authenticators to also
      indicate the desire for an extra round trip if need be;

   o  a new Authorization-Data element for use in Authenticators for
      quoting back a challenge nonce from the acceptor;

   o  a new PDU: KRB-ERROR2, with additional fields and support for
      authenticated errors.

   Initiators SHALL NOT use the new ap-options flag and AD element if
   mutual authentication was not requested.  Otherwise initiators and
   acceptors MUST act as follows:

   o  To request this feature, initiators SHALL add the new
      authorization-data element (in an AD-IF-RELEVANT container) with
      empty ad-value to their Authenticators, and they SHALL add the new
      ap-options flag to their AP-REQs.

   o  Acceptors that wish to request an additional round trip SHOULD do
      so when initiators indicate support for it, and do so by returning
      a KRB-ERROR2.  The encrypted part of the KRB-ERROR2 SHALL be
      encrypted in one of the following keys: the sub-session key from
      the AP-REQ's Authenticator if it could be decrypted, the session
      key from the Ticket, if it could be decrypted, or the null enctype
      and null key.  The KRB-ERROR2 in this case SHALL have a the
      continue-needed e-flag set.  The acceptor SHALL also return
      GSS_S_CONTINUE_NEEDED to the application.

   o  Initiators that request this feature and receive a KRB-ERROR with
      the ke-continue-needed e-flag set MUST attempt to recover and MUST
      produce a token to send to the acceptor (possibly a KRB-ERROR2 if
      the initiator failed to recover, or possibly a new AP-REQ with the
      traditional GSS-API pseudo-ASN.1 mechanism OID header).  A final
      error token from the initiator to the acceptor

   o  Initiators that request this feature and receive a KRB-ERROR2
      SHALL attempt to recover.

   o  Initiators that support this feature and successfully recover from
      a KRB-ERROR or KRB-ERROR2 SHALL return GSS_S_CONTINUE_NEEDED.
      Otherwise they MUST generate a KRB-ERROR to send to the acceptor
      and return an error to the application.

   The following Kerberos errors can be recovered from using this
   protocol:

   o  KRB_AP_ERR_TKT_EXPIRED

   o  KRB_AP_ERR_TKT_NYV

   o  KRB_AP_ERR_REPEAT

   o  KRB_AP_ERR_BADMATCH

   o  KRB_AP_ERR_SKEW

   o  KRB_AP_ERR_BADKEYVER

   o  KRB_AP_PATH_NOT_ACCEPTED

   Error codes that denote PDU corruption can also be recovered from:

   o  KRB_AP_ERR_BADVERSION

   o  KRB_AP_ERR_MSG_TYPE

   o  KRB_AP_ERR_MODIFIED

   It is also possible for an acceptor to request that the initiator re-
   authenticate but to a different service principal, in which case the
   error code SHALL be KRB_AP_ERR_NOT_US, the KRB-ERROR2 encrypted part
   MUST be encrypted in the sub-session key from the Authenticator, and
   the sname and realm fields of the KRB-ERROR2 MUST be present.

2.1.  ASN.1 for New Protocol Elements

    APOptions       ::= KerberosFlags
            - reserved(0),
            - use-session-key(1),
            - mutual-required(2)
            - continue-needed-ok(TBD)

    ad-continue-needed-ok Int32 ::= <TBD>
    ad-continue-nonce     Int32 ::= <TBD>
    td-continue-needed    Int32 ::= <TBD>
    td-continue-failed    Int32 ::= <TBD>

    KRB-ERROR2          ::= [APPLICATION <TBD>] SEQUENCE {
            pvno            [0] INTEGER (5),
            msg-type        [1] INTEGER (<TBD>),
            enc-part        [2] EncryptedData - EncKRBErrorPart
    }

    ErrorFlags ::= KerberosFlags
            - reserved(0)  [XXX sounds like cargo cult!]
            - continue-needed(1)
            - use-other-sname(2)

    EncAPRepPart    ::= [APPLICATION <TBD>] SEQUENCE {
            nonce           [0] OCTET STRING (16),
            stime           [1] KerberosTime,
            susec           [2] Microseconds,
            error-code      [3] Int32,
            e-flags         [4] KerberosFlags,
            e-text          [5] KerberosString OPTIONAL,
            e-data          [6] OCTET STRING OPTIONAL,
            e-typed-data    [7] TYPED-DATA OPTIONAL
            realm           [8] Realm OPTIONAL, - service realm
            sname           [9] PrincipalName OPTIONAL, - service name
    }

              Figure 1: ASN.1 module (with explicit tagging)


3.  Security Considerations

   This document deals with security.

   [XXX Note the resource using attacks that are feasible when we have
   multiple round-trips and note that they are nothing new and nothing
   to worry about because services should already have timeouts on pre-
   authenticated protocol phases, and even post-authentication.]


4.  IANA Considerations

   This document has no IANA considerations.


5.  Informative References


6.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2743]  Linn, J., "Generic Security Service Application Program
              Interface Version 2, Update 1", RFC 2743, January 2000.

   [RFC2744]  Wray, J., "Generic Security Service API Version 2 :
              C-bindings", RFC 2744, January 2000.

   [RFC4120]  Neuman, C., Yu, T., Hartman, S., and K. Raeburn, "The
              Kerberos Network Authentication Service (V5)", RFC 4120,
              July 2005.

   [RFC4121]  Zhu, L., Jaganathan, K., and S. Hartman, "The Kerberos
              Version 5 Generic Security Service Application Program
              Interface (GSS-API) Mechanism: Version 2", RFC 4121,
              July 2005.


Author's Address

   Nicolas Williams
   Cryptonector, LLC

   Email: nico@cryptonector.com

