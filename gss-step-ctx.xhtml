<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "file:///home/nico/I-Ds/kitten/../test/src/../data/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.0.0" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>Simplified and Asynchronous Security Context Interfaces for the Generic Security Services Application Programming Interface</title>

<!-- Text Class Preamble -->
<style type="text/css">
div.toc {
margin: 2em 0em;
border-style: solid;
border-width: 2px 0px;
padding: 1em 0em;
}
div.tochead { font-size: x-large; font-weight: bold; }
div.lyxtoc-0 {
margin: 2em 0em 0em 0em;
font-size: xx-large;
font-weight: bold;
}
div.lyxtoc-1 {
margin: 1em 0em 0em 0em;
font-size: x-large;
font-weight: bold;
}
div.lyxtoc-2 {
margin: 0em 0em 0em 1em;
font-size: large;
font-weight: normal;
}
div.lyxtoc-3 { margin: 0em 0em 0em 0.5em; font-size: medium; }
div.lyxtoc-4 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-5 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-6 { margin: 0em 0em 0em 0.5em; }
a.tocentry {
text-decoration: none;
color: black;
}
a.tocentry:visited { color: black; }
a.tocarrow {
font-weight: bold;
text-decoration: none;
color: #909090;
}
a.tocarrow:visited { color: #C0C0C0; }
</style>

<!-- Preamble Snippets -->

<!-- Layout-provided Styles -->
<style type='text/css'>
h1.title {
font-size: x-large;
margin-bottom: 1ex;
text-align: center;

}
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
div.author {
font-size: large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.abstract {
font-size: small;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
margin-right: 3ex;
text-align: left;

}
div.abstract_label {
font-weight: bold;
font-size: large;
text-align: center;

}

div.abstract {
margin: 4ex;
}
div.abstract_item {
font-size: small;
padding-top: 1ex;
}
div.abstract_label {
font-weight: bold;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
h3.subsection {
font-weight: bold;
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
h4.subsubsection {
font-weight: bold;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.4ex;
text-align: left;

}
dl.description dt { font-weight: bold; }
div.flex_docname {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ipr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_intendedstatus {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_titleabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ietfarea {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_xml_rfckeyword {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_updates {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_toc {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_symrefs {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_tocindent {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororg {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororgabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authoremailaddr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_entityxref {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.float {
border: 2px solid black;
text-align: center;
}
div.listings {
font-family: monospace;
}
div.float-caption {
text-align: center;
border: 2px solid black;
padding: 1ex;
margin: 1ex;
}
div.flex_bibxml {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
</style>
</head>
<body>
<h1 class="title"><a id='magicparlabel-1' />
Simplified and Asynchronous Security Context Interfaces for the Generic Security Services Application Programming Interface</h1>
<div class="standard"><a id='magicparlabel-2' />
<div class="flex_docname"><div class="plain_layout"><a id='magicparlabel-6' />
draft-williams-kitten-ctx-simple-async-00</div>
</div><div class="flex_ipr"><div class="plain_layout"><a id='magicparlabel-10' />
trust200902</div>
</div><div class="flex_intendedstatus"><div class="plain_layout"><a id='magicparlabel-14' />
std</div>
</div><div class="flex_titleabbrev"><div class="plain_layout"><a id='magicparlabel-18' />
Simple GSS</div>
</div><div class="flex_ietfarea"><div class="plain_layout"><a id='magicparlabel-22' />
Security Area</div>
</div><div class="flex_xml_rfckeyword"><div class="plain_layout"><a id='magicparlabel-26' />
Internet-Draft</div>
</div><div class="flex_updates"><div class="plain_layout"><a id='magicparlabel-30' />
RFC2743 RFC2744</div>
</div></div>

<div class="standard"><a id='magicparlabel-31' />
<div class="flex_pi_toc"><div class="plain_layout"><a id='magicparlabel-35' />
yes</div>
</div><div class="flex_pi_symrefs"><div class="plain_layout"><a id='magicparlabel-39' />
yes</div>
</div><div class="flex_pi_tocindent"><div class="plain_layout"><a id='magicparlabel-43' />
no</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-47' />
comments="yes"</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-51' />
inline="yes"</div>
</div></div>

<div class="author"><div class="author_item"><a id='magicparlabel-52' />
Nicolas Williams<div class="flex_authororg"><div class="plain_layout"><a id='magicparlabel-56' />
Cryptonector, LLC</div>
</div><div class="flex_authororgabbrev"><div class="plain_layout"><a id='magicparlabel-60' />
Cryptonector</div>
</div><div class="flex_authoremailaddr"><div class="plain_layout"><a id='magicparlabel-64' />
nico@cryptonector.com</div>
</div></div>
</div>

<div class="abstract"><div class="abstract_label">Abstract</div>
<div class="abstract_item"><a id='magicparlabel-65' />
This Internet-Draft proposes extensions to the Generic Security Services Application Programming Interface (GSS-API) for replacing the exiting GSS_Init_sec_context() and GSS_Accept_sec_context() functions with simplified forms that also support asynchrony.</div>
</div>
<div class="standard"><a id='magicparlabel-66' />
</div>
<div class='toc'><div class='tochead part_'>Table of Contents</div>

<div class='lyxtoc-1'><a href='#magicparlabel-67' class='tocentry'>1 Introduction</a> <a href='#magicparlabel-67' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-69' class='tocentry'>1.1 Conventions used in this document</a> <a href='#magicparlabel-69' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-75' class='tocentry'>2 Simplified API</a> <a href='#magicparlabel-75' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-90' class='tocentry'>2.1 GSS_Create_sec_context()</a> <a href='#magicparlabel-90' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-102' class='tocentry'>2.1.1 C-Bindings</a> <a href='#magicparlabel-102' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-119' class='tocentry'>2.2 GSS_Set_context_flags()</a> <a href='#magicparlabel-119' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-136' class='tocentry'>2.2.1 C-Bindings</a> <a href='#magicparlabel-136' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-155' class='tocentry'>2.3 GSS_Set_context_credentials()</a> <a href='#magicparlabel-155' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-167' class='tocentry'>2.3.1 C-Bindings</a> <a href='#magicparlabel-167' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-185' class='tocentry'>2.4 GSS_Set_context_channel_bindings()</a> <a href='#magicparlabel-185' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-196' class='tocentry'>2.4.1 C-Bindings</a> <a href='#magicparlabel-196' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-214' class='tocentry'>2.5 GSS_Set_context_lifetime()</a> <a href='#magicparlabel-214' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-225' class='tocentry'>2.5.1 C-Bindings</a> <a href='#magicparlabel-225' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-243' class='tocentry'>2.6 GSS_Set_async_IO_notification()</a> <a href='#magicparlabel-243' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-260' class='tocentry'>2.6.1 C-Bindings</a> <a href='#magicparlabel-260' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-298' class='tocentry'>2.7 GSS_Set_context_role_init()</a> <a href='#magicparlabel-298' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-312' class='tocentry'>2.7.1 C-Bindings</a> <a href='#magicparlabel-312' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-331' class='tocentry'>2.8 GSS_Step_context()</a> <a href='#magicparlabel-331' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-348' class='tocentry'>2.8.1 C-Bindings</a> <a href='#magicparlabel-348' class='tocarrow'>&gt;</a></div>
</div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-368' class='tocentry'>3 Security Considerations</a> <a href='#magicparlabel-368' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-370' class='tocentry'>4 IANA Considerations</a> <a href='#magicparlabel-370' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-372' class='tocentry'>5 Normative References</a> <a href='#magicparlabel-372' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-398' class='tocentry'>6 Informative References</a> <a href='#magicparlabel-398' class='tocarrow'>&gt;</a></div>
</div>

<h2 class="section"><span class="section_label">1</span> <a id='magicparlabel-67' />
Introduction</h2>
<div class="standard"><a id='magicparlabel-68' />
We propose replacing the GSS_Init_sec_context() and GSS_Accept_sec_context() functions with a set of simpler functions: one to create an &ldquo;empty&rdquo; security context, a set of functions to set context parameters, a single function for &ldquo;stepping&rdquo; the security context token exchange, and additional security context inquiry functions. Support for non-blocking stepping of security context token exchange is also included.</div>
<h3 class="subsection"><span class="subsection_label">1.1</span> <a id='magicparlabel-69' />
Conventions used in this document</h3>
<div class="standard"><a id='magicparlabel-70' />
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-74' />
RFC2119</div>
</div>.</div>
<h2 class="section"><span class="section_label">2</span> <a id='magicparlabel-75' />
Simplified API</h2>
<div class="standard"><a id='magicparlabel-76' />
We add a function for creating &ldquo;empty&rdquo; security contexts:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-77' />
GSS_Create_sec_context()</li>
</ul>
<div class="standard"><a id='magicparlabel-78' />
We add the following new mutator functions for empty security contexts:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-79' />
GSS_Set_context_flags()</li>
<li class="itemize_item"><a id='magicparlabel-80' />
GSS_Set_context_credentials()</li>
<li class="itemize_item"><a id='magicparlabel-81' />
GSS_Set_context_role_init()</li>
<li class="itemize_item"><a id='magicparlabel-82' />
GSS_Set_context_channel_bindings()</li>
<li class="itemize_item"><a id='magicparlabel-83' />
GSS_Set_context_lifetime()</li>
<li class="itemize_item"><a id='magicparlabel-84' />
GSS_Set_context_event_loop() [XXX not yet specified. I want to use libevent bases here, or libev. It seems silly to invent something new.]</li>
<li class="itemize_item"><a id='magicparlabel-85' />
GSS_Set_async_IO_notification()</li>
</ul>
<div class="standard"><a id='magicparlabel-86' />
We add a function for stepping through security context token exchanges:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-87' />
GSS_Step_context()</li>
</ul>
<div class="standard"><a id='magicparlabel-88' />
We add a function for retrieving delegated credentials from a security context token:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-89' />
GSS_Get_context_deleg_cred()</li>
</ul>
<h3 class="subsection"><span class="subsection_label">2.1</span> <a id='magicparlabel-90' />
GSS_Create_sec_context()</h3>
<div class="standard"><a id='magicparlabel-91' />
Inputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-92' />
&lt;none&gt;</li>
</ul>
<div class="standard"><a id='magicparlabel-93' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-94' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-95' />
minor_status INTEGER &ndash; note: mostly useless, but we should keep it</li>
<li class="itemize_item"><a id='magicparlabel-96' />
context SECURITY CONTEXT</li>
</ul>
<div class="standard"><a id='magicparlabel-97' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-98' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-99' />
GSS_S_UNAVAILABLE indicates that memory is not available, for example.</li>
<li class="itemize_item"><a id='magicparlabel-100' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<div class="standard"><a id='magicparlabel-101' />
This function creates an &ldquo;empty&rdquo; security context handle that can be passed to GSS_Init_sec_context() or GSS_Accept_sec_context() where they expect a NULL context. The context can also be passed to the other new security context functions defined in this document.</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.1.1</span> <a id='magicparlabel-102' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-103' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-107' />
</div>
<div class='float float-listings'><pre> OM_uint32
 gss_create_sec_context(OM_uint32 *minor_status,
                        gss_ctx_id_t *context);</pre></div>


<div class="plain_layout"><a id='magicparlabel-114' />
<div class='float-caption float-caption-figure'>Figure 1:<div class="plain_layout"><a id='magicparlabel-118' />
C-Bindings of GSS_Create_sec_context()</div>
</div></div>
</div>

<h3 class="subsection"><span class="subsection_label">2.2</span> <a id='magicparlabel-119' />
GSS_Set_context_flags()</h3>
<div class="standard"><a id='magicparlabel-120' />
Inputs:</div>

<dl class='description'><dt class="description_label">context&nbsp;CONTEXT&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-121' />
 </dd>
<dt class="description_label">req_flags&nbsp;FLAGS</dt>
<dd class="description_item"><a id='magicparlabel-122' />
 Requested flags. Applicable to acceptors and initiators.</dd>
<dt class="description_label">ret_flags_understood&nbsp;FLAGS</dt>
<dd class="description_item"><a id='magicparlabel-123' />
 Return flags understood by the caller.</dd>
</dl>
<div class="standard"><a id='magicparlabel-124' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-125' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-126' />
minor_status INTEGER</li>
</ul>
<div class="standard"><a id='magicparlabel-127' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-128' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-129' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<div class="standard"><a id='magicparlabel-130' />
This function tells the mechanism (when one is eventually chosen and invoked) that the application requests the given req_flags and undestands the given ret_flags. Initiators can override the req_flags in their GSS_Init_sec_context() call, but if no flags are requested there then the req_flags set on the empty context will be used.</div>

<div class="standard"><a id='magicparlabel-131' />
NOTE: The abstract GSS-API <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-135' />
RFC2743</div>
</div> uses individual elements -one per-flag- instead of a &ldquo;FLAGS&rdquo; type. This is unwieldy, therefore we introduce an abstract type named &ldquo;FLAGS&rdquo; to act as a set of all the request/return flags defined for the abstract GSS-API.</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.2.1</span> <a id='magicparlabel-136' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-137' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-141' />
</div>
<div class='float float-listings'><pre> OM_uint32
 gss_set_context_flags(OM_uint32 *minor_status,
                       gss_ctx_id_t context,
                       uint64_t req_flags,
                       uint64_t ret_flags);</pre></div>


<div class="plain_layout"><a id='magicparlabel-150' />
<div class='float-caption float-caption-figure'>Figure 2:<div class="plain_layout"><a id='magicparlabel-154' />
C-Bindings of GSS_Set_context_flags()</div>
</div></div>
</div>

<h3 class="subsection"><span class="subsection_label">2.3</span> <a id='magicparlabel-155' />
GSS_Set_context_credentials()</h3>
<div class="standard"><a id='magicparlabel-156' />
Inputs:</div>

<dl class='description'><dt class="description_label">context&nbsp;CONTEXT&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-157' />
 Empty security context</dd>
<dt class="description_label">input_cred_handle&nbsp;CREDENTIAL&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-158' />
</dd>
</dl>
<div class="standard"><a id='magicparlabel-159' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-160' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-161' />
minor_status INTEGER</li>
</ul>
<div class="standard"><a id='magicparlabel-162' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-163' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-164' />
...</li>
<li class="itemize_item"><a id='magicparlabel-165' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<div class="standard"><a id='magicparlabel-166' />
This function sets the application's credentials. If not set then the default credentials will be used. Multiple acceptor credentials MAY be set on a security context; the mechanism SHOULD allow accepting security contexts for any principal names for which credentials were set, and MUST allow accepting security cotnexts for the first credential's principal name.</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.3.1</span> <a id='magicparlabel-167' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-168' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-172' />
</div>
<div class='float float-listings'><pre> OM_uint32
 gss_set_context_credentials(OM_uint32 *minor_status,
                             gss_ctx_id_t context,
                             gss_const_cred_id_t input_cred_handle);</pre></div>


<div class="plain_layout"><a id='magicparlabel-180' />
<div class='float-caption float-caption-figure'>Figure 3:<div class="plain_layout"><a id='magicparlabel-184' />
C-Bindings of GSS_Set_context_credentials()</div>
</div></div>
</div>

<h3 class="subsection"><span class="subsection_label">2.4</span> <a id='magicparlabel-185' />
GSS_Set_context_channel_bindings()</h3>
<div class="standard"><a id='magicparlabel-186' />
Inputs:</div>

<dl class='description'><dt class="description_label">context&nbsp;CONTEXT&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-187' />
 Empty security context</dd>
<dt class="description_label">input_channel_bindings&nbsp;OCTET&nbsp;STRING</dt>
<dd class="description_item"><a id='magicparlabel-188' />
</dd>
</dl>
<div class="standard"><a id='magicparlabel-189' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-190' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-191' />
minor_status INTEGER</li>
</ul>
<div class="standard"><a id='magicparlabel-192' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-193' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-194' />
...</li>
<li class="itemize_item"><a id='magicparlabel-195' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<h4 class="subsubsection"><span class="subsubsection_label">2.4.1</span> <a id='magicparlabel-196' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-197' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-201' />
</div>
<div class='float float-listings'><pre> OM_uint32
 gss_set_context_channel_bindings(OM_uint32 *minor_status,
                                  gss_ctx_id_t context,
                                  gss_const_buffer_t input_cb);</pre></div>


<div class="plain_layout"><a id='magicparlabel-209' />
<div class='float-caption float-caption-figure'>Figure 4:<div class="plain_layout"><a id='magicparlabel-213' />
C-Bindings of GSS_Set_context_lifetime()</div>
</div></div>
</div>

<h3 class="subsection"><span class="subsection_label">2.5</span> <a id='magicparlabel-214' />
GSS_Set_context_lifetime()</h3>
<div class="standard"><a id='magicparlabel-215' />
Inputs:</div>

<dl class='description'><dt class="description_label">context&nbsp;CONTEXT&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-216' />
 Empty security context</dd>
<dt class="description_label">lifetime_req&nbsp;INTEGER</dt>
<dd class="description_item"><a id='magicparlabel-217' />
 ...</dd>
</dl>
<div class="standard"><a id='magicparlabel-218' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-219' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-220' />
minor_status INTEGER</li>
</ul>
<div class="standard"><a id='magicparlabel-221' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-222' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-223' />
...</li>
<li class="itemize_item"><a id='magicparlabel-224' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<h4 class="subsubsection"><span class="subsubsection_label">2.5.1</span> <a id='magicparlabel-225' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-226' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-230' />
</div>
<div class='float float-listings'><pre> OM_uint32
 gss_set_context_lifetime(OM_uint32 *minor_status,
                          gss_ctx_id_t context,
                          uint64_t lifetime_req);</pre></div>


<div class="plain_layout"><a id='magicparlabel-238' />
<div class='float-caption float-caption-figure'>Figure 5:<div class="plain_layout"><a id='magicparlabel-242' />
C-Bindings of GSS_Set_context_lifetime()</div>
</div></div>
</div>

<h3 class="subsection"><span class="subsection_label">2.6</span> <a id='magicparlabel-243' />
GSS_Set_async_IO_notification()</h3>
<div class="standard"><a id='magicparlabel-244' />
Inputs:</div>

<dl class='description'><dt class="description_label">context&nbsp;CONTEXT&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-245' />
 Empty security context</dd>
<dt class="description_label">async_notification_method&nbsp;UNSPECIFIED</dt>
<dd class="description_item"><a id='magicparlabel-246' />
</dd>
</dl>
<div class="standard"><a id='magicparlabel-247' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-248' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-249' />
minor_status INTEGER</li>
</ul>
<div class="standard"><a id='magicparlabel-250' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-251' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-252' />
...</li>
<li class="itemize_item"><a id='magicparlabel-253' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<div class="standard"><a id='magicparlabel-254' />
This function sets a method for informing the application that the given security context is ready to have GSS_Step_context() called on it. Whenever GSS_Step_context() returns GSS_S_CONTINUE_NEEDED and no output token the application must wait for the async I/O completion notification and then call GSS_Step_context() again (this time with no input token). GSS_Step_context() will only work asynchronously when this function has been used to set a completion notification method.</div>

<div class="standard"><a id='magicparlabel-255' />
The async I/O completion notification method is not specified for the abstract API. In the C bindings we allow for several different notification methods, including:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-256' />
callback function</li>
<li class="itemize_item"><a id='magicparlabel-257' />
file descriptor or file handle into which a single byte (any value) will be written</li>
<li class="itemize_item"><a id='magicparlabel-258' />
a condition variable (and associated mutex) on which a signal will be sent</li>
</ul>
<div class="standard"><a id='magicparlabel-259' />
Other completeion notification methods could be specified as well, but these seem likely to be sufficient and reasonably portable.</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.6.1</span> <a id='magicparlabel-260' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-261' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-265' />
</div>
<div class='float float-listings'><pre> typedef void (*gss_async_cb_t)(gss_ctx_id_t context, void *cb_data);
 
 OM_uint32
 gss_set_context_async_io_cb(OM_uint32 *minor_status,
                             gss_ctx_id_t context,
                             gss_async_cb_t cb,
                             void *cb_data);
 
 OM_uint32
 gss_set_context_async_io_fd(OM_uint32 *minor_status,
                             gss_ctx_id_t context,
                             int fd);
 
 
 OM_uint32
 gss_set_context_async_io_handle(OM_uint32 *minor_status,
                                 gss_ctx_id_t context,
                                 HANDLE h);
 
 OM_uint32
 gss_set_context_async_io_condvar(OM_uint32 *minor_status,
                                  gss_ctx_id_t context,
                                  pthread_cond_t cv,
                                  pthread_mutex_t lock);</pre></div>


<div class="plain_layout"><a id='magicparlabel-293' />
<div class='float-caption float-caption-figure'>Figure 6:<div class="plain_layout"><a id='magicparlabel-297' />
C-Bindings of GSS_Set_async_IO_notification()</div>
</div></div>
</div>

<h3 class="subsection"><span class="subsection_label">2.7</span> <a id='magicparlabel-298' />
GSS_Set_context_role_init()</h3>
<div class="standard"><a id='magicparlabel-299' />
Inputs:</div>

<dl class='description'><dt class="description_label">context&nbsp;CONTEXT&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-300' />
 Empty security context</dd>
<dt class="description_label">mech_type&nbsp;OID</dt>
<dd class="description_item"><a id='magicparlabel-301' />
 Mechanism OID</dd>
<dt class="description_label">target&nbsp;NAME</dt>
<dd class="description_item"><a id='magicparlabel-302' />
 Name of target service principal</dd>
</dl>
<div class="standard"><a id='magicparlabel-303' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-304' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-305' />
minor_status INTEGER</li>
</ul>
<div class="standard"><a id='magicparlabel-306' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-307' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-308' />
GSS_S_UNAVAILABLE</li>
<li class="itemize_item"><a id='magicparlabel-309' />
...</li>
<li class="itemize_item"><a id='magicparlabel-310' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<div class="standard"><a id='magicparlabel-311' />
This function sets the security context role to be that of an initiator, with the given mechanism OID (possibly GSS_C_NO_OID), and the given target name (possibly GSS_C_NO_NAME).</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.7.1</span> <a id='magicparlabel-312' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-313' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-317' />
</div>
<div class='float float-listings'><pre> OM_uint32
 gss_set_context_context_role_init(OM_uint32 *minor_status,
                                   gss_ctx_id_t context,
                                   gss_const_OID mech_oid,
                                   gss_const_name_t target_name);</pre></div>


<div class="plain_layout"><a id='magicparlabel-326' />
<div class='float-caption float-caption-figure'>Figure 7:<div class="plain_layout"><a id='magicparlabel-330' />
C-Bindings of GSS_Set_context_role_init()</div>
</div></div>
</div>

<h3 class="subsection"><span class="subsection_label">2.8</span> <a id='magicparlabel-331' />
GSS_Step_context()</h3>
<div class="standard"><a id='magicparlabel-332' />
Inputs:</div>

<dl class='description'><dt class="description_label">context&nbsp;CONTEXT&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-333' />
 Empty security context</dd>
<dt class="description_label">input_token&nbsp;OCTET&nbsp;STRING</dt>
<dd class="description_item"><a id='magicparlabel-334' />
 Input security context token, if any</dd>
</dl>
<div class="standard"><a id='magicparlabel-335' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-336' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-337' />
minor_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-338' />
output_token OCTET STRING &ndash; output security context token, if any</li>
<li class="itemize_item"><a id='magicparlabel-339' />
actual_mech OID &ndash; OID of mechanism used</li>
</ul>
<div class="standard"><a id='magicparlabel-340' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-341' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-342' />
GSS_S_CONTINUE_NEEDED ...</li>
<li class="itemize_item"><a id='magicparlabel-343' />
GSS_S_UNAVAILABLE</li>
<li class="itemize_item"><a id='magicparlabel-344' />
...</li>
<li class="itemize_item"><a id='magicparlabel-345' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<div class="standard"><a id='magicparlabel-346' />
This function steps through one step of security context token exchange for the given security context.</div>

<div class="standard"><a id='magicparlabel-347' />
Note that if GSS_S_CONTINUE_NEEDED is returned but no security context is output, then the function must be called again upon async I/O completion notification.</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.8.1</span> <a id='magicparlabel-348' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-349' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-353' />
</div>
<div class='float float-listings'><pre> OM_uint32
 gss_step_context(OM_uint32 *minor_status,
                  gss_ctx_id_t context,
                  gss_const_buffer_t input_token,
                  gss_buffer_t output_token,
                  gss_const_OID *actual_mech);</pre></div>


<div class="plain_layout"><a id='magicparlabel-363' />
<div class='float-caption float-caption-figure'>Figure 8:<div class="plain_layout"><a id='magicparlabel-367' />
C-Bindings of GSS_Step_context()</div>
</div></div>
</div>

<h2 class="section"><span class="section_label">3</span> <a id='magicparlabel-368' />
Security Considerations</h2>
<div class="standard"><a id='magicparlabel-369' />
...</div>
<h2 class="section"><span class="section_label">4</span> <a id='magicparlabel-370' />
IANA Considerations</h2>
<div class="standard"><a id='magicparlabel-371' />
[Add registrations for all the above functions.]</div>
<h2 class="section"><span class="section_label">5</span> <a id='magicparlabel-372' />
<a id="sec_References" />
Normative References</h2>
<div class="standard"><a id='magicparlabel-373' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-377' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">rfc2119</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-378' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-382' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2743.xml">rfc2743</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-383' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-387' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2744.xml">rfc2744</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-388' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-392' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5056.xml">rfc5056</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-393' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-397' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5587.xml">rfc5587</a></div>
</div></div>
<h2 class="section"><span class="section_label">6</span> <a id='magicparlabel-398' />
Informative References</h2>
<div class="standard"><a id='magicparlabel-399' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-403' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5653.xml">rfc5653</a></div>
</div></div>
</body>
</html>
